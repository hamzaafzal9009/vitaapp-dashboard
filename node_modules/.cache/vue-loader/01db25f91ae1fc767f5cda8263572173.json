{"remainingRequest":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/vue/Vite Dashboard/src/components/Dashboard.vue?vue&type=style&index=0&id=aae30ed8&scoped=true&lang=css&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/src/components/Dashboard.vue","mtime":1614367521863},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZGFzaGJvYXJkLWNvbnRhaW5lciB7CiAgaGVpZ2h0OiBhdXRvOwogIG1hcmdpbjogYXV0bzsKICBtYXgtd2lkdGg6IDEwMCU7CiAgbWluLWhlaWdodDogMTAwdmg7Cn0KCg=="},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA","file":"Dashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"dashboard-container\">\n      <DashboardComponents />\n  </div>\n</template>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst db = firebase.firestore();\nconst driverRef = db.collection(\"drivers\");\nimport DashboardComponents from \"./DashboardComponents/NumberCard\";\nexport default {\n  name: \"dashboard\",\n  components: {\n    DashboardComponents,\n  },\n  data: () => ({\n    driversData: [\n      {\n        title: \"Total Drivers\",\n        iconcolor: \"info\",\n        icon: \"fas fa-user-tie\",\n        value: \"total\",\n        total: 0,\n        number: 0,\n      },\n      {\n        title: \"Approved Drivers\",\n        iconcolor: \"green\",\n        icon: \"fas fa-user-check\",\n        value: \"approve\",\n        total: 0,\n        number: 0,\n      },\n      {\n        title: \"Blocked Drivers\",\n        iconcolor: \"warning\",\n        icon: \"fas fa-user-slash\",\n        value: \"blocked\",\n        total: 0,\n        number: 0,\n      },\n      {\n        title: \"New Drivers\",\n        iconcolor: \"light-green\",\n        icon: \"fas fa-user-plus\",\n        value: \"new\",\n        total: 0,\n        number: 0,\n      },\n      {\n        title: \"Incomplete Drivers\",\n        iconcolor: \"error\",\n        icon: \"fas fa-user-times\",\n        value: \"incomplete\",\n        total: 0,\n        number: 0,\n      },\n    ],\n  }),\n\n  methods: {\n    // getVehicle() {\n    //   const api = this.axios.create({\n    //     headers: {\n    //       common: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"X-API-Key\":\n    //           \"NJjy0LIuZVCPGWjyjfHsYdL9TAQiVZbP:FgXY7PrpLCpeboYy5y5BWQp-KBzaHQJ83p7parhnAGCu0W5XJIQYp7IkkltqHbk-\",\n    //         Accept: \"application/json\",\n    //       },\n    //     },\n    //   });\n    //   api\n    //     .post(\"https://api.rideos.ai/ride-hail-operations/v1/GetVehicles\", {\n    //       fleetId: \"default\",\n    //     })\n    //     .then(({ data }) => {\n    //       const vehcleStatus = {\n    //         online: 0,\n    //         offline: 0,\n    //         onTrip: 0,\n    //       };\n    //       data[\"vehicle\"].forEach((vehicle) => {\n    //         if (vehicle.state.readiness) {\n    //           vehcleStatus.online += 1;\n    //         }\n    //         if (!vehicle.state.readiness) {\n    //           vehcleStatus.offline += 1;\n    //         }\n    //         if (vehicle.state.plan.step.length > 0) {\n    //           vehcleStatus.onTrip += 1;\n    //         }\n    //       });\n    //       this.pieChartData.pieChart.series = [\n    //         vehcleStatus.online,\n    //         vehcleStatus.onTrip,\n    //         vehcleStatus.offline,\n    //       ];\n    //     });\n    // },\n  },\n};\n</script>\n\n<style scoped>\n#dashboard-container {\n  height: auto;\n  margin: auto;\n  max-width: 100%;\n  min-height: 100vh;\n}\n\n</style>\n"]}]}