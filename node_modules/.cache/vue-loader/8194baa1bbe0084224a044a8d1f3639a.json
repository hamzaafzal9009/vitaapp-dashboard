{"remainingRequest":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/DashboardComponents/DedupeCustomers.vue?vue&type=style&index=0&id=66cb87e9&scoped=true&lang=css&","dependencies":[{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/DashboardComponents/DedupeCustomers.vue","mtime":1581270622000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRhc2hib2FyZC10aWxlLWhlYWRlciB7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouZGFzaGJvYXJkLXRpbGUtYm9keSB7CiAgZm9udC1zaXplOiA0OHB4Owp9CgouZGFzaGJvYXJkLXRpbGUtYm9keSA+IGRpdiB7CiAgcGFkZGluZzogMDsKICBtYXJnaW46IDA7Cn0KCmlucHV0IHsKICBtYXJnaW4tbGVmdDogMjBweDsKfQoKYnV0dG9uIHsKICBiYWNrZ3JvdW5kOiAjNGZjYmM1OwogIGNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiA1cHggMTBweDsKICBtYXJnaW4tbGVmdDogMjBweDsKfQoK"},{"version":3,"sources":["DedupeCustomers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"DedupeCustomers.vue","sourceRoot":"src/components/DashboardComponents","sourcesContent":["<template>\n  <div class=\"dashboard-tile\">\n    <div class=\"dashboard-tile-header\" style=\"font-weight: bolder;\">Dedupe Customers</div>\n    <div class=\"remove-duplicates-container\">\n      <input type=\"text\" placeholder=\"Enter a locationId\" v-model=\"locationId\">\n      <button @click=\"scrubList()\">Scrub This Location</button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport DashboardService from './../../services/DashboardService'\nimport CustomerService from './../../services/CustomerService'\nimport {EventService} from '../../main'\n\nexport default {\n  name: 'dedupeCustomers',\n  data: function() {\n    return {\n      locationId: ''\n    }\n  },\n\n  methods: {\n    scrubList() {\n      let vm = this;\n      CustomerService.scrubLocationCustomerList(vm.locationId).then(response => {\n        if(response) {\n          EventService.$emit('successMessage', 'There were ' + response.removed + ' customers scrubbed from this location as duplicates.')\n          vm.locationId = '';\n        } else if(response.removed == 0) {\n          EventService.$emit('warningMessage', 'No duplicate customers were found for the entered location.')\n        } else {\n          EventService.$emit('errorMessage', 'Something went wrong, please try again later.')\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.dashboard-tile-header {\n  cursor: pointer;\n}\n\n.dashboard-tile-body {\n  font-size: 48px;\n}\n\n.dashboard-tile-body > div {\n  padding: 0;\n  margin: 0;\n}\n\ninput {\n  margin-left: 20px;\n}\n\nbutton {\n  background: #4fcbc5;\n  color: white;\n  padding: 5px 10px;\n  margin-left: 20px;\n}\n\n</style>\n"]}]}