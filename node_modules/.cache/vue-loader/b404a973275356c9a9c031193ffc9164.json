{"remainingRequest":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/components/ReplyThroughGoogle.vue?vue&type=style&index=0&id=2319a278&scoped=true&lang=css&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/components/ReplyThroughGoogle.vue","mtime":1581270622000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZm9vdGVyQnRuewogIHdpZHRoOiAxMDAlCn0KLnRpdGxlewogIGZvbnQtc2l6ZTogMTRweDsKICBmb250LXdlaWdodDogNzAwOwogIGNvbG9yOiAjNzU3NTc1Owp9Ci50ZXh0YXJlYXsKICByZXNpemU6IG5vbmU7CiAgd29yZC1icmVhazoga2VlcC1hbGw7Cn0KLmZhLXN0YXIgewogIGNvbG9yOiNFQkM1NDU7CiAgZm9udC1zaXplOiAxNHB4Owp9Ci5kZXNjcmlwdGlvbnsKICBmb250LXNpemU6IDE0cHg7CiAgd29yZC1icmVhazoga2VlcC1hbGw7Cn0K"},{"version":3,"sources":["ReplyThroughGoogle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ReplyThroughGoogle.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <el-dialog\n    title=\"Reply Through Google\"\n    :visible.sync=\"dialogVisible\"\n    center\n    :before-close=\"closeModal\"\n    :show-close=\"false\" \n    width=\"600px\">\n    <p class=\"title\">\n      {{review.name}} \n      <span v-for=\"(star, index) in review.rating\" :key=\"index\">\n       <i class=\"fas fa-star\"></i>\n      </span>\n    </p>\n    <p class=\"description\">{{review.reviewText}}</p>\n    <br>\n    <p class=\"title\">Response</p>\n    <el-input type=\"textarea\" class=\"textarea\" :autosize=\"{ minRows: 4, maxRows: 6}\" placeholder=\"Type your response...\" v-model=\"reply\"></el-input>\n    <span slot=\"footer\" class=\"dialog-footer\">\n      <el-row type=\"flex\" class=\"row-bg\" justify=\"space-between\">\n        <el-col :span=\"12\">\n          <el-button type=\"text\" @click=\"closeModal\" class=\"cancelBtn\" >DISCARD</el-button>\n        </el-col>\n        <el-col :span=\"12\">\n          <el-button type=\"primary\" class=\"footerBtn\" @click=\"googleReply()\">REPLY</el-button>\n        </el-col>\n      </el-row>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport FeedbackService from \"./../services/FeedbackService\";\nimport { EventService } from \"../main\";\n\nexport default {\n  name: \"googleReply\",\n  props: [\"selectedReview\"],\n  data: function() {\n    return {\n      dialogVisible: true,\n      value:3,\n      review: {},\n      reply: '',\n      customerLogs: []\n    };\n  },\n  created() {\n    this.review = this.selectedReview;\n    if (this.review && this.review.reply) this.reply = this.review.reply;\n  },\n  methods: {\n    googleReply() {\n      if (!this.review) {\n        EventService.$emit(\"errorMessage\", \"Review not found.  Please try again.\");\n        this.closeModal();\n      } else if (!this.reply) {\n        EventService.$emit(\"errorMessage\", \"Reply cannot be blank.\");\n      } else {\n        var vm = this;\n        FeedbackService.googleReply(this.review.locationId, this.review.sourceId, this.reply).then(function(response) {\n          if (response.success) {\n            EventService.$emit(\"successMessage\", \"Reply posted to Google!\");\n            vm.closeAfterResponse();\n          } else {\n            EventService.$emit(\"errorMessage\", response.message);\n          }\n        });\n      }\n    },\n    closeModal: function() {\n      this.dialogVisible = false;\n      this.$emit(\"closeModal\");\n    },\n    closeAfterResponse: function() {\n      this.dialogVisible = false;\n      this.$emit(\"closeAndRespond\");\n    },\n  }\n};\n</script>\n\n<style scoped>\n.footerBtn{\n  width: 100%\n}\n.title{\n  font-size: 14px;\n  font-weight: 700;\n  color: #757575;\n}\n.textarea{\n  resize: none;\n  word-break: keep-all;\n}\n.fa-star {\n  color:#EBC545;\n  font-size: 14px;\n}\n.description{\n  font-size: 14px;\n  word-break: keep-all;\n}\n</style>"]}]}