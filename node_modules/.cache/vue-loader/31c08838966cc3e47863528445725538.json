{"remainingRequest":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/CSVPreview.vue?vue&type=style&index=0&id=0e8c2412&scoped=true&lang=css&","dependencies":[{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/CSVPreview.vue","mtime":1581270622000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5tb2RhbC1jb250YWluZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBtaW4td2lkdGg6IDUxMHB4OwogIG1heC13aWR0aDogMTAwMHB4OwogIG1hcmdpbjogNDBweCBhdXRvIDA7CiAgcGFkZGluZzogMjBweCAzMHB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm9yZGVyLXJhZGl1czogMnB4OwogIGJveC1zaGFkb3c6IDAgMnB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMzMpOwogIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2U7CiAgcG9zaXRpb246IHN0aWNreTsKICB0b3A6IDQwcHg7Cn0KLmN1c3RvbWVyLXRhYmxlIHsKICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICBmb250LXNpemU6IDE0cHg7CiAgcGFkZGluZzogMTBweDsKICBjbGVhcjogYm90aDsKfQoKZGl2LmN1c3RvbWVyLXRhYmxlIGRpdi5zdXBlcmFkbWluLXJvdyB7CiAgYmFja2dyb3VuZDogI2ZmZmYwMDsKfQoKc2VsZWN0IHsKICBtYXJnaW4tdG9wOiAxMHB4Owp9Cm9wdGlvbiB7CiAgbWFyZ2luLWxlZnQ6IDEwcHg7Cn0KCi5zZWxlY3QtbG9jYXRpb25zIHsKICB3aWR0aDogNjAlOwp9CgouY3VzdG9tZXItaGVhZGVyLXJvdyB7CiAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpOwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIHBhZGRpbmc6IDEwcHg7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlZmVmZWY7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlZmVmZWY7CiAgaGVpZ2h0OiAxNHB4OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiBub3dyYXA7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouY3VzdG9tZXItaGVhZGVyLXJvdyBkaXYsCi5jdXN0b21lci1yb3cgZGl2IHsKICBtYXJnaW46IGF1dG87Cn0KCi5jdXN0b21lci1yb3cgewogIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTsKICBjbGVhcjogYm90aDsKICBwYWRkaW5nOiAxMHB4OwogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWZlZmVmOwogIGhlaWdodDogYXV0bzsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtd3JhcDogbm93cmFwOwogIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5Owp9CgouY3VzdG9tZXItcm93Om50aC1jaGlsZChldmVuKSB7CiAgLyogYmFja2dyb3VuZDogI2VmZWZlZjsgKi8KfQoKLmN1c3RvbWVyLXJvdyBpbnB1dCB7CiAgZmxleDogMCAwIDEwMHB4OwogIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50Owp9CgouY3VzdG9tZXItcm93OmhvdmVyIHsKICBiYWNrZ3JvdW5kOiAjZGZkZmRmOwp9CgouY3VzdG9tZXItdGFibGUtY2VsbC1kZXRhaWxzIHsKICBmbGV4OiAwIDAgMTUwcHg7Cn0KCi5jdXN0b21lci10YWJsZS1jZWxsLTAgewogIGZsZXg6IDAgMCAxODBweDsKICAvKiBjdXJzb3I6IHBvaW50ZXI7ICovCn0KCi5jdXN0b21lci10YWJsZS1jZWxsLTEgewogIGZsZXg6IDAgMCAxNjBweDsKICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsKfQoKLmN1c3RvbWVyLXRhYmxlLWNlbGwtMiB7CiAgZmxleDogMSAxIDE4MHB4OwogIC8qIGN1cnNvcjogcG9pbnRlcjsgKi8KfQouY3VzdG9tZXItdGFibGUtY2VsbC01IHsKICBmbGV4OiAxIDEgMTUwcHg7CiAgLyogY3Vyc29yOiBwb2ludGVyOyAqLwp9CgouY3VzdG9tZXItdGFibGUtY2VsbC0zIHsKICBmbGV4OiAyIDIgMTUwcHg7Cn0KCi5jdXN0b21lci10YWJsZS1jZWxsLTQgewogIGZsZXg6IDAgMCAxMDBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5jdXN0b21lci10YWJsZS1jZWxsLTQgc3BhbiB7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoubW9kYWwtaGVhZGVyIGgzIHNwYW4gewogIGZvbnQtc2l6ZTogMTRweDsKICBmbG9hdDogcmlnaHQ7CiAgbWFyZ2luLXJpZ2h0OiA1MHB4Owp9CgoubW9kYWwtZm9vdGVyIHsKICBjbGVhcjogYm90aDsKICB0ZXh0LWFsaWduOiByaWdodDsKICBtYXJnaW4tdG9wOiAyMHB4Owp9CgoubW9kYWwtZGVmYXVsdC1idXR0b24gewogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmlucHV0cyB7CiAgd2lkdGg6IDEyNXB4Owp9CgpvcHRpb24gewogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9Cgo="},{"version":3,"sources":["CSVPreview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"CSVPreview.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <transition name=\"modal\">\n    <div class='modal-mask' @click=\"closeModal()\">\n      <div class=\"modal-container\" @click.stop>\n        <div class=\"modal-header\">\n          <h3>Upload Preview <span> {{fileName}} </span></h3>\n        </div>\n        <div>\n          <label>Select Location: </label>\n          <div class=\"select-locations\">\n            <el-select v-model=\"customer.locationId\">\n              <el-option v-for='(option, optIndex) in locationOptions' :key=\"optIndex\" :value=\"option\" :label=\"option\">\n              </el-option>\n            </el-select>\n            <!-- <v-select :options=\"locationOptions\" v-model=\"customer.locationId\" maxHeight=\"120px\">\n              <span slot=\"no-options\">Sorry, no locations were found with that filter.</span>\n            </v-select> -->\n          </div>\n          <br/>\n          <label>Message Template: </label>\n          <select v-model=\"customer.template\" >\n            <option v-for=\"(template, tindex) in templateOptions\" :key=\"tindex\">{{template}}</option>\n            <option v-if=\"customer.location\" :value=\"customer.location\">{{customer.location}}</option>\n          </select>\n          <br />\n          <label>Customer Status: </label>\n          <select v-model=\"customer.status\" >\n            <option value=\"active\">Active</option>\n            <option value=\"inactive\">Inactive</option>\n          </select>\n          <br/>\n          <label>Customer Country: </label>\n          <select v-model=\"customer.country\">\n            <option value=\"+1\">USA</option>\n            <option value=\"+1\">Canada</option>\n            <option value=\"+63\">Phillipines</option>\n            <option value=\"+971\">UAE (Dubai)</option>\n            <option value=\"+61\">Australia</option>\n          </select>\n        </div>\n        <div class=\"modal-footer text-right\">\n          <button class=\"modal-default-button\" @click=\"addCustomers()\" :disabled=\"!ready && customer.locationId\">\n            Accept\n          </button>\n          <button class=\"modal-default-button\" @click=\"closeModal()\">\n            Close\n          </button>\n        </div>\n        <div class=\"customer-table\">\n          <div class=\"customer-header-row\">\n            <div class=\"customer-table-cell-0\">\n              <span>First Name</span>\n            </div>\n            <div class=\"customer-table-cell-1\">\n              <span>Last Name</span>\n            </div>\n            <div class=\"customer-table-cell-2\">\n              <span>Phone Number</span>\n            </div>\n            <div class=\"customer-table-cell-2\">\n              <span>Email</span>\n            </div>\n            <div class=\"customer-table-cell-3\">\n              <span>Notes</span>\n            </div>\n          </div>\n          <div class=\"customer-row\">\n            <div class=\"customer-table-cell-0\">\n              <select v-model=\"customerHeader.firstName\" @change=\"onHeaderChange('index1', 'firstName')\">\n                <option v-for=\"(header, hindex0) in headers\" :key=\"hindex0\">{{header}}</option>\n              </select>\n            </div>\n            <div class=\"customer-table-cell-1\">\n              <select v-model=\"customerHeader.lastName\" @change=\"onHeaderChange('index2', 'lastName')\">\n                <option v-for=\"(header, hindex1) in headers\" :key=\"hindex1\">{{header}}</option>\n              </select>\n            </div>\n            <div class=\"customer-table-cell-2\">\n              <select v-model=\"customerHeader.phone\" @change=\"onHeaderChange('index3', 'phone')\">\n                <option v-for=\"(header, hindex2) in headers\" :key=\"hindex2\">{{header}}</option>\n              </select>\n            </div>\n            <div class=\"customer-table-cell-5\">\n              <select v-model=\"customerHeader.email\" @change=\"onHeaderChange('index4', 'email')\">\n                <option v-for=\"(header, hindex3) in headers\" :key=\"hindex3\">{{header}}</option>\n              </select>\n            </div>\n            <div class=\"customer-table-cell-3\">\n              <select v-model=\"customerHeader.notes\" @change=\"onHeaderChange('index5', 'notes')\">\n                <option v-for=\"(header, hindex4) in headers\" :key=\"hindex4\">{{header}}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"customer-row quick-transition\" v-for=\"(customer, csvindex) in csvData\" :key=\"csvindex\" >\n            <input class=\"customer-table-cell-0 inputs\" v-model=\"customer[index1]\" :disabled=\"customerHeader.firstName == 'Leave Blank'\" />\n            <input class=\"customer-table-cell-1 inputs\" v-model=\"customer[index2]\" :disabled=\"customerHeader.lastName == 'Leave Blank'\" />\n            <input class=\"customer-table-cell-2 inputs\" v-model=\"customer[index3]\" :disabled=\"customerHeader.phone == 'Leave Blank'\" />\n            <input class=\"customer-table-cell-5 inputs\" v-model=\"customer[index4]\" :disabled=\"customerHeader.email == 'Leave Blank'\" />\n            <input class=\"customer-table-cell-3 inputs\" v-model=\"customer[index5]\" :disabled=\"customerHeader.notes == 'Leave Blank'\" />\n          </div>\n        </div>\n        </div>\n        </div>\n    </transition>\n</template>\n<script>\nimport CustomerService from \"./../services/CustomerService\";\nimport UserService from \"./../services/UserService\";\nimport { EventService } from \"../main\";\nimport vSelect from \"../../node_modules/vue-select/src/components/Select.vue\";\nimport UploadService from '../services/UploadService';\n\nexport default {\n  name: \"csvPreview\",\n  props: [\"rawData\", \"fileName\"],\n  components: {\n    vSelect\n  },\n  data: function() {\n    return {\n      csv: [],\n      customer: {\n        country: \"+1\",\n        template: \"default\",\n        status: \"active\"\n      },\n      locationOptions: [],\n      customersList: [],\n      ready: false,\n      csvData: [],\n      templateOptions: [\"default\", \"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n      invalidRecords: 0,\n      headers: [],\n      customerHeader: [\"firstName\", \"lastName\", \"phone\", \"email\", \"notes\"],\n      index1: 0,\n      index2: 1,\n      index3: 2,\n      index4: 3,\n      index5: 4,\n      updatedOnce: false\n    };\n  },\n  created() {\n    this.selectedLocation = localStorage.getItem(\"locationId\");\n    this.getLocationOptions();\n  },\n\n  computed: {\n    isReady() {\n      if (this.rawData.length > 0) {\n        this.csvData = this.rawData;\n      }\n      if (this.csvData && this.csvData.length == this.rawData.length) {\n        if (this.headers.length < 1) {\n          this.headers = this.csvData.shift();\n        }\n        if (this.headers) {\n          this.mapHeaders();\n          this.mapData();\n          this.updatedOnce = true;\n        }\n        this.ready = true;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  watch: {\n    isReady(n) {\n      if (n == true) {\n        // console.log(n);\n        null;\n      }\n    }\n  },\n  methods: {\n    removeDuplicates(list) {\n      let vm = this;\n      // Removes \"undefined\" customers prior to scrubbing against the csv itself.\n      let initialScrubList = list.filter(e => e);\n      // Reduce to a new array\n      let filteredArr = initialScrubList.reduce((acc, current) => {\n        // As long as the current customer record has either phone number or email, proceed to check it for dupes, otherwise move on with the current accumulator.\n        if(current.phone || current.email) {\n          // Find whether any customers in the list up to this point have either the same email, or it's blank, or the same for phone number.\n          let found = acc.find(customer => { return (customer.email == current.email && current.email != '') || (customer.phone == current.phone && current.phone != '') })\n          // If there isn't anything found for either email or phone bumber, add it to the list, unless phone exists and isn't 10 digits.\n          if(!found && ( current.phone == '' || current.phone.length == 10 )) {\n            return acc.concat([current]);\n          } else {\n            return acc\n          }\n        } else {\n          return acc;\n        }\n      }, [])\n      return filteredArr;\n    },\n    mapHeaders() {\n      this.customerHeader.firstName = this.headers[0].trim();\n      this.customerHeader.lastName = this.headers[1].trim();\n      this.customerHeader.phone = this.headers[2].trim();\n      this.customerHeader.email = this.headers[3].trim();\n      this.customerHeader.notes = this.headers[4].trim();\n      if (!this.updatedOnce) {\n        this.headers.push(\"Leave Blank\");\n      }\n    },\n    mapData() {\n      this.csvData.map((e, i) => {\n        e.map((h, j) => {\n          h = h.trim();\n        });\n      });\n    },\n    getLocationOptions() {\n      if (!this.customer.location) {\n        UserService.getAllUserLocations().then(response => {\n          response.map((e, i) => {\n            this.locationOptions.push({ value: e.locationId, label: e.name });\n          });\n          if (this.selectedLocation) {\n            this.locationOptions.map((e, i) => {\n              if (e.value == this.selectedLocation) {\n                this.customer.locationId = e;\n              }\n            });\n          }\n        });\n      }\n    },\n    onHeaderChange(indexName, value) {\n      this[indexName] = this.headers.indexOf(this.customerHeader[value]);\n    },\n    addCustomers() {\n      let vm = this;\n      if (vm.ready == true) {\n        let addingCustomersList = vm.csvData.map((e, i) => {\n          let cust = {};\n          if ( e[vm.index3] || e[vm.index4]) {\n            e[vm.index1] ? cust.firstName = e[vm.index1].trim() : cust.firstName = e[vm.index1];\n            e[vm.index2] ? cust.lastName = e[vm.index2].trim() : cust.lastName = e[vm.index2];\n            e[vm.index3] ? e[vm.index3].charAt(0) == 1 ? cust.phone = e[vm.index3].substr(1).replace(/\\D/g, \"\") : cust.phone = e[vm.index3].replace(/\\D/g, \"\") : cust.phone = e[vm.index3];\n            e[vm.index4] ? cust.email = e[vm.index4].replace(/\\s/g, \"\").toLowerCase() : cust.email = e[vm.index4];\n            e[vm.index5] ? cust.notes = e[vm.index5].trim : cust.notes = '';\n            cust.country = this.customer.country;\n            return cust\n          } else {\n            console.log('Invalid Customer Record - must include either email or phone number');\n          }\n        });\n        // Removes \"undefined\" customers prior to scrubbing against the csv itself.\n        vm.customersList = vm.customersList.filter(e => e);\n        vm.customersList = this.removeDuplicates(vm.customersList, \"email\");\n        vm.customersList = this.removeDuplicates(vm.customersList, \"phone\");\n        vm.customersList.map((e, i) => {\n          if (e.phone.length > 0) {\n            if (e.phone.length !== 10) {\n              console.log(\"Invalid Record or Duplicate\", e);\n              vm.invalidRecords++;\n            }\n          }\n        });\n        \n        // Below now takes care of duplicates by phone or email in a single step, as well as length of phone number or whether they have an email instead.\n        addingCustomersList = this.removeDuplicates(addingCustomersList);\n        \n        // console.log(addingCustomersList);\n        \n        EventService.$emit(\"loading\", \"show\");\n        this.saveCustomer(\n          vm.customer.locationId.value,\n          vm.customer.template,\n          vm.customer.status,\n          addingCustomersList\n        );\n      }\n    },\n    saveCustomer(id, template, status, data) {\n      EventService.$emit(\"loading\", \"show\");\n      let vm = this;\n      let record = {\n        recordName: vm.fileName,\n        fileSize: data.length || 'Unknown',\n        locationId: id,\n        status: 'Uploaded'\n      }\n      return new Promise(function(resolve, reject) {\n        if (data.length === 0) {\n          resolve('done!');\n          EventService.$emit(\"loading\", \"hide\");\n          UploadService.saveUploadRecord(id, record);\n          vm.closeModal();\n        } else {\n          var newCustomers = data.splice(0, 100);\n          CustomerService.saveManyCustomers(id, template, status, newCustomers).then(function() {\n            resolve(vm.saveCustomer(id, template, status, data));\n          }, function(error) {\n            reject(error);\n            EventService.$emit('errorMessage', \"Sorry, something went wrong. Please try again.\")\n            vm.closeModal();\n          });\n        }\n      })\n    },\n    closeModal() {\n      this.$emit(\"closeModal\");\n      this.csv = [];\n      this.csvData = [];\n      this.customer = {};\n      this.locationOptions = [];\n      this.customersList = [];\n    }\n  }\n};\n</script>\n\n<style scoped>\n.modal-container {\n  position: relative;\n  min-width: 510px;\n  max-width: 1000px;\n  margin: 40px auto 0;\n  padding: 20px 30px;\n  background-color: #fff;\n  border-radius: 2px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n  transition: all 0.3s ease;\n  position: sticky;\n  top: 40px;\n}\n.customer-table {\n  background: white;\n  font-size: 14px;\n  padding: 10px;\n  clear: both;\n}\n\ndiv.customer-table div.superadmin-row {\n  background: #ffff00;\n}\n\nselect {\n  margin-top: 10px;\n}\noption {\n  margin-left: 10px;\n}\n\n.select-locations {\n  width: 60%;\n}\n\n.customer-header-row {\n  width: calc(100% - 20px);\n  font-weight: bold;\n  padding: 10px;\n  border-top: 1px solid #efefef;\n  border-bottom: 1px solid #efefef;\n  height: 14px;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n  cursor: pointer;\n}\n\n.customer-header-row div,\n.customer-row div {\n  margin: auto;\n}\n\n.customer-row {\n  width: calc(100% - 20px);\n  clear: both;\n  padding: 10px;\n  border-bottom: 1px solid #efefef;\n  height: auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n}\n\n.customer-row:nth-child(even) {\n  /* background: #efefef; */\n}\n\n.customer-row input {\n  flex: 0 0 100px;\n  background: transparent;\n}\n\n.customer-row:hover {\n  background: #dfdfdf;\n}\n\n.customer-table-cell-details {\n  flex: 0 0 150px;\n}\n\n.customer-table-cell-0 {\n  flex: 0 0 180px;\n  /* cursor: pointer; */\n}\n\n.customer-table-cell-1 {\n  flex: 0 0 160px;\n  text-transform: capitalize;\n}\n\n.customer-table-cell-2 {\n  flex: 1 1 180px;\n  /* cursor: pointer; */\n}\n.customer-table-cell-5 {\n  flex: 1 1 150px;\n  /* cursor: pointer; */\n}\n\n.customer-table-cell-3 {\n  flex: 2 2 150px;\n}\n\n.customer-table-cell-4 {\n  flex: 0 0 100px;\n  text-align: center;\n}\n\n.customer-table-cell-4 span {\n  margin-right: 5px;\n  cursor: pointer;\n}\n\n.modal-header h3 span {\n  font-size: 14px;\n  float: right;\n  margin-right: 50px;\n}\n\n.modal-footer {\n  clear: both;\n  text-align: right;\n  margin-top: 20px;\n}\n\n.modal-default-button {\n  cursor: pointer;\n}\n\n.inputs {\n  width: 125px;\n}\n\noption {\n  text-transform: capitalize;\n}\n\n</style>\n"]}]}