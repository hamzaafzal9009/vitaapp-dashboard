{"remainingRequest":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/AddAutomation.vue?vue&type=style&index=0&id=f10866d0&scoped=true&lang=css&","dependencies":[{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/AddAutomation.vue","mtime":1581270622000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddAutomation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAunfile":"AddAutomation.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <transition name=\"modal\">\n    <div class=\"modal-mask\" @click=\"closeModal()\">\n      <div class=\"automation-container\" @click.stop>\n        <header>\n          <span>{{pageAction}} {{displayName}}</span>\n          <i class=\"fal fa-times\" @click=\"closeModal()\"></i>\n        </header>\n        <div class=\"automations-style-container\">\n          <div class=\"automation-action-container\">\n            <span class=\"initial-trigger\"> Automation Name: </span>\n            <input class=\"input-name\" type=\"text\" v-model=\"automation.name\" placeholder=\"\">\n            <!-- ******** Identifier for using this automation that can be passed to the general api for customers. -->\n            <span class=\"initial-trigger\"> Automation Identifier: <i class=\"fal fa-info-circle\" title=\"Custom Identifier for Adding Customers to this Automation\"></i></span>\n            <input class=\"input-name\" type=\"text\" :class=\"{'duplicate':duplicateId}\" v-model=\"automation.identifier\" @change=\"validateID(automation.identifier)\" placeholder=\"Example: 1, 2, 3 will be passed as q=1, q=2, q=3\">\n            <span v-if=\"duplicateId\" class=\"dupe-message\">Identifier Already Exists for This Location</span>\n            <span class=\"initial-trigger\">Language:\n              <select class=\"trigger-select\" v-model=\"automation.language\">\n                <option value=\"en\">English</option>\n                <option value=\"sp\">Spanish</option>\n              </select>\n            </span>\n            <span class=\"initial-trigger\"> Start this automation when this trigger takes place: </span>\n            <select class=\"trigger-select\" v-model=\"automation.triggerEvent\">\n              <option value=\"customerAdd\">New Customer Added</option>\n              <option value=\"customerAddedAgain\">Customer Added Again</option>\n              <option v-if=\"automation.type == 'loyalty'\" value=\"keyword\">Keyword Received</option>\n              <option v-if=\"automation.type == 'survey'\" value=\"negativeResponse\"> Negative Feedback Received</option>\n            </select>\n            <input v-if=\"automation.type == 'loyalty'\" type=\"text\" :class=\"{'duplicate':duplicateKey}\" style=\"text-align: center;\" placeholder=\"KEYWORD\" @change=\"convertToCaps()\" v-model=\"automation.keyword\" maxlength=\"20\">\n            <span v-if=\"duplicateKey\" class=\"dupe-message\">Keyword Already Exists</span>\n            <div class=\"modal-follow-up-details\">\n              <div class=\"modal-column-resend\">\n                <label>Allow Resend When Customer Is Re-Added: </label>\n                <select v-model=\"automation.autoResend\">\n                  <option value=\"never\">Never</option>\n                  <option value=\"2592000000\">1 Month</option>\n                  <option value=\"7776000000\">3 Months</option>\n                  <option value=\"15724800000\">6 Months</option>\n                  <option value=\"31536000000\">1 Year</option>\n                  <option value=\"always\">Always</option>\n                </select>\n              </div>\n            </div>\n            <div class=\"horizontal-divider\"></div>\n            <div class=\"scroll-area\">\n              <div class=\"automation-actions-list\" v-for=\"(action, i) in automation.actions\">\n                <div>Interaction {{i+1}} </div>\n                <i class=\"fal fa-plus-circle top\" @click=\"addAction('above', i)\" title=\"Add Action Above\"></i>\n                <div class=\"automation-action\">\n\n                  <!-- Segment displaying current automation actions for Time -->\n\n                  <div class=\"automation-action-holder\">\n                    <span class=\"action-box\" v-if=\"action.time || i == 0\"> <i class=\"far fa-clock\"></i> After {{action.time}} hour<span v-if=\"action.time > 1 || action.time == 0\">s</span> </span>\n                    <i class=\"fal fa-pencil\" v-if=\"(action.time || i == 0) && !initializedUnlayer\" @click=\"editTimeCondition(action, i)\" title=\"Edit Action Time Condition\"></i>\n                    <i class=\"fal fa-pencil unavailable\" v-if=\"action.time && initializedUnlayer\" title=\"Save Email Prior to Editing Further Messages.\"></i>\n                  </div>\n                  <span v-if=\"!action.time && i != 0\"> <i class=\"fal fa-plus-circle\" @click=\"editTimeCondition(action, i)\" title=\"Add Action Time Condition\"></i> </span>\n                  <div class=\"vertical-divider-line\"></div>\n\n                  <!-- Segment displaying current automation actions for Email -->\n\n                  <div class=\"automation-action-holder\">\n                    <span class=\"action-box message\" v-if=\"action.email && action.email.subject\"> <i class=\"fas fa-envelope\"></i>Send Email \"{{action.email.subject}}\"\n                    </span>\n                    <i class=\"fal fa-pencil\" v-if=\"action.email && action.email.subject && !initializedUnlayer\" @click=\"previewEmail(action)\" title=\"Edit Action Email Details\"></i>\n                    <i class=\"fal fa-pencil unavailable\" v-if=\"action.email && action.email.subject && initializedUnlayer\" title=\"Save Email Prior to Editing Further Messages.\"></i>\n                  </div>\n                  <span v-if=\"!action.email || !action.email.subject\"> <i class=\"fal fa-plus-circle\" @click=\"previewEmail(action)\" title=\"Add Action Email\"></i> </span>\n                  <div class=\"vertical-divider-line\" v-if=\"checkTime(action.time, i)\"></div>\n\n                  <!-- Segment displaying current automation actions for SMS -->\n\n                  <div class=\"automation-action-holder\" v-if=\"checkTime(action.time, i)\">\n                    <span class=\"action-box message\" v-if=\"action.sms && action.sms.preview\"> <i class=\"fal fa-mobile-android\"></i>Send SMS \"{{action.sms.preview}}\" </span>\n                    <i class=\"fal fa-pencil\" v-if=\"action.sms && action.sms.message && !initializedUnlayer\" @click=\"previewSMS(action)\" title=\"Edit Action SMS Details\"></i>\n                    <i class=\"fal fa-pencil unavailable\" v-if=\"action.sms && action.sms.message && initializedUnlayer\" title=\"Save Email Prior to Editing Further Messages.\"></i>\n                  </div>\n                  <span v-if=\"(!action.sms || !action.sms.preview) && checkTime(action.time, i)\"> <i class=\"fal fa-plus-circle\" @click=\"previewSMS(action, i)\" title=\"Add Action SMS Message\"></i> </span>\n                  <span v-if=\"automation.actions.length > 1 || i != 0\"> <i class=\"fal fa-times-circle\" @click=\"removeAction(i)\" title=\"Remove Action\"></i> </span>\n                  <div class=\"vertical-divider-line\" v-if=\"automationType == 'reviewRequest' || 'survey'\"></div>\n\n                  <!-- Segment displaying current automation actions for Landing Page info in the case of review requests -->\n\n                  <div class=\"automation-action-holder\" v-if=\"automationType == 'reviewRequest' && action.email && action.email.subject\">\n                    <span class=\"action-box message\" v-if=\"action.landingPage\"> <i class=\"fas fa-columns\"></i>Landing Page Details </span>\n                    <i class=\"fal fa-pencil\" v-if=\"action.landingPage && !initializedUnlayer\" @click=\"editLandingPage(action)\" title=\"Edit Landing Page Details\"></i>\n                    <i class=\"fal fa-pencil unavailable\" v-if=\"action.landingPage && initializedUnlayer\" title=\"Save Email Prior to Editing Further Messages.\"></i>\n                  </div>\n                  <span v-if=\"(!action.landingPage || !action.email || !action.email.subject ) && automationType == 'reviewRequest'\"> <i class=\"fal fa-plus-circle\" :class=\"{'inactive': !action.email.subject}\" @click=\"editLandingPage(action)\" :title=\"landingMessage\"></i> </span>\n\n                  <!-- Segment displaying current automation actions for an image in the case of loyalty emails -->\n\n                  <div class=\"automation-action-holder\" v-if=\"automationType == 'loyalty'\">\n                    <span class=\"action-box message\" v-if=\"action.loyaltyCoupon\"> <i class=\"fas fa-columns\"></i>Loyalty Coupon </span>\n                    <i class=\"fal fa-pencil\" v-if=\"action.loyaltyCoupon && !initializedUnlayer\" @click=\"editLoyaltyCoupon(action)\" title=\"Edit Loyalty Coupon\"></i>\n                    <i class=\"fal fa-pencil unavailable\" v-if=\"action.loyaltyCoupon && initializedUnlayer\" title=\"Save Email Prior to Editing Further Messages.\"></i>\n                  </div>\n                  <span v-if=\"!action.loyaltyCoupon && automationType == 'loyalty'\"> <i class=\"fal fa-plus-circle\" @click=\"editLoyaltyCoupon(action)\" title=\"Add Loyalty Coupon\"></i> </span>\n\n                  <!-- Segment displaying current automation actions for survey page info for surveys -->\n\n                  <div class=\"automation-action-holder\" v-if=\"automationType == 'survey'\">\n                    <span class=\"action-box message\" v-if=\"action.surveyQuestions\"> <i class=\"fas fa-columns\"></i>Survey Page Active </span>\n                    <i class=\"fal fa-pencil\" v-if=\"action.surveyQuestions && !initializedUnlayer\" @click=\"editSurvey(action)\" title=\"Edit Survey Page Details\"></i>\n                    <i class=\"fal fa-pencil unavailable\" v-if=\"action.surveyQuestions && initializedUnlayer\" title=\"Save Email Prior to Editing Further Messages.\"></i>\n                  </div>\n                  <span v-if=\"!action.surveyQuestions && automationType == 'survey'\"> <i class=\"fal fa-plus-circle\" @click=\"editSurvey(action)\" title=\"Edit Survey Page\"></i> </span>\n                  <span v-if=\"automation.actions.length > 1 || i != 0\"> <i class=\"fal fa-times-circle\" @click=\"removeAction(i)\" title=\"Remove Action\"></i> </span>\n                  <!-- Below is for adding restrictions beyond having received the email before. At this time it isn't certain whether it will be necessary. -->\n                  <!-- <div class=\"vertical-divider-line\"></div>\n                  <div class=\"automation-action-holder\">\n                    <span class=\"action-box\" v-if=\"action.restriction\"> <i class=\"far fa-ban\"></i> {{action.restriction}} </span>\n                    <i class=\"fal fa-pencil\" v-if=\"action.restriction\"></i>\n                  </div>\n                  <span v-if=\"!action.restriction\"> <i class=\"fal fa-plus-circle\"></i> </span>  -->\n                </div>\n                <i class=\"fal fa-plus-circle bottom\" @click=\"addAction('below', i)\" title=\"Add Action Below\"></i>\n                <div class=\"vertical-divider-line\" v-if=\"automation.actions.length !== i+1\"></div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Display Overview Details of the automation if no other editors are displaying. -->\n\n          <div class=\"message-editor-container\" v-if=\"displayOverview\">\n            <div class=\"overview\">\n              <div class=\"header-save-container\">\n                <button :disabled=\"duplicateId || duplicateKey || !automation.name || !automation.locationId || !automation.identifier || !automation.triggerEvent || !automation.type\" @click.once=\"saveAutomation()\">Save Automation</button>\n              </div>\n              <span class=\"message-editor-header\">\n                <div class=\"display-info\"> <label>Name: </label><span>{{automation.name}}</span> </div>\n                <div class=\"display-info\"> <label>Type: </label><span>{{splitAndConvertName(automation.type)}}</span> </div>\n                <div class=\"display-info\"> <label>Trigger: </label><span>{{splitAndConvertName(automation.triggerEvent)}}</span> </div>\n                <div class=\"display-info\"> <label>Actions: </label>\n                <span class=\"action-container\" v-for=\"action in automation.actions\">\n                  <span class=\"action-line\"><label>After a customer exists for</label> {{action.time}} hour<span v-if=\"action.time > 1 || action.time == 0\">s</span></span>\n                  <span class=\"action-line\" v-if=\"action.email && action.email.subject\"> <label>Send them this email:  </label> \"{{action.email.subject}}\"</span>\n                  <span class=\"action-line\" v-if=\"action.email && action.sms.preview\"> <label><span v-if=\"!action.email.subject\">Send them </span><span v-if=\"action.email.subject\" >And</span> a text with this preview:</label> {{action.sms.preview}}</span>\n                  <span class=\"action-line\" v-if=\"action.sms && action.sms.message\"> <label>And this message: </label> {{action.sms.message}}</span>\n                  <span class=\"action-line\" v-if=\"action.sms && action.sms.preview && !action.sms.message\"> <label class=\"warning\">But it seems you've forgotten a message!</label></span>\n                  </span>\n                </div>\n              </span>\n            </div>\n          </div>\n\n          <!-- Editor container for Changing the action Time -->\n\n          <div class=\"message-editor-container\" v-if=\"editingTimeCondition\">\n            <div class=\"header-container\">\n              <span class=\"message-editor-header\"> <label>Time Delay: </label>After <input class=\"delay-input\" type=\"number\" :min=\"checkMinTimes(selectedAction)\" v-model=\"selectedAction.time\"> hour<span v-if=\"selectedAction.time > 1 || selectedAction.time == 0\">s</span>. </span>\n              <span><button @click=\"closeAllEditing()\">Save Delay</button></span>\n            </div>\n            <div id=\"time-editor\"></div>\n          </div>\n\n          <!-- Editor container for editing the email subject and design -->\n\n          <div class=\"message-editor-container\" v-show=\"emailPreview\" >\n            <div class=\"header-container\">\n              <span class=\"message-editor-header\"> <label>Email Subject: </label> <input type=\"text\" v-model=\"selectedAction.email.subject\"> </span>\n              <span><button @click=\"closeAllEditing()\">Save Email</button><span class=\"close-command\" @click=\"cancelEmailEdit()\">Cancel</span></span>\n            </div>\n            <div class=\"campaign-email-editor\" id=\"email-editor\"></div>\n          </div>\n\n          <!-- Editor container for editing the sms preview and design -->\n\n          <div class=\"message-editor-container\" v-if=\"smsPreview\">\n            <div class=\"header-container\">\n              <span class=\"message-editor-header\"> <label>SMS Preview: </label> <input type=\"text\" v-model=\"selectedAction.sms.preview\"> </span>\n              <span><button @click=\"closeAllEditing()\">Save SMS</button></span>\n            </div>\n            <div class=\"sms-message-container\">\n              <label>SMS Message: </label>\n              <textarea v-model=\"selectedAction.sms.message\" maxlength=\"118\" />\n              <span v-if=\"selectedAction.sms.message && selectedAction.sms.message.length > 1\" @change=\"selectedAction.sms.message = selectedAction.sms.message.trim()\">{{selectedAction.sms.message.length}} / 118</span>\n            </div>\n            <div id=\"sms-editor\">\n              <div class=\"sms-preview-display\">\n                <img src='../assets/img/phoneImage.png' style=\"height: 550px;\" />\n                <div class=\"divider-line\">888-555-1234</div>\n                  <div class=\"sms-message-preview\" v-if=\"selectedAction.sms.message\">\n                    <span v-if=\"selectedAction.sms.message\">{{selectedAction.sms.message}}</span><br/><br/>\n                    <span v-if=\"selectedAction.sms.message\">Click Here: opin.in/exmpl</span>\n                    <!-- <span v-if=\"selectedAction.sms.message && automation.type != 'survey'\">Click Here: opin.in/exmpl</span> -->\n                  </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Editor container for editing the landing page in the case of review requests -->\n\n          <div class=\"message-editor-container\" v-if=\"editingLandingPage\">\n            <div class=\"header-container\">\n              <span><button @click=\"openPreviewModal()\">Preview Landing Page</button></span>\n              <span><button @click=\"closeAllEditing()\">Save Landing Page</button></span>\n            </div>\n            <div id=\"landing-editor\">\n              <!-- <h4>Receive Notifications For: </h4>\n              <div class=\"landing-detail\">\n                <label>Potential Negative Reviews</label><input type=\"checkbox\" v-model=\"selectedAction.notice.potentialNegRev\">\n              </div>\n              <div class=\"landing-detail\">\n                <label>Actual Negative Reviews</label><input type=\"checkbox\" v-model=\"selectedAction.notice.actualNegRev\">\n              </div>\n              <div class=\"landing-detail\">\n                <label>Positive Reviews</label><input type=\"checkbox\" v-model=\"selectedAction.notice.positiveRev\">\n              </div>\n              <div class=\"landing-detail\">\n                <label>Private Feedback</label><input type=\"checkbox\" v-model=\"selectedAction.notice.privateRev\">\n              </div> -->\n              <div class=\"landing-page-details-container\">\n                <div>Landing Page:</div>\n                <br/>\n                <div class=\"modal-landing-page-details\">\n                  <div class=\"landing-detail\"><label>Header </label><input v-model=\"selectedAction.landingPage.lp1\" placeholder=\"Landing Page Title\" /></div><br />\n                  <div class=\"landing-detail\"><label>Sub Header </label><input v-model=\"selectedAction.landingPage.lp2\" placeholder=\"Landing Page Subtitle\" /></div><br />\n                  <div class=\"landing-textarea\"><label>Message </label><textarea v-model=\"selectedAction.landingPage.lp3\" placeholder=\"Landing Page Message\" ></textarea> </div><br />\n                Feedback Page: <br/><br/>\n                  <div class=\"landing-detail\"><label>Header </label><input v-model=\"selectedAction.landingPage.rp1\" placeholder=\"Review Page Title\" /></div><br />\n                  <div class=\"landing-detail\"><label>Sub Header </label><input v-model=\"selectedAction.landingPage.rp2\" placeholder=\"Review Page Subtitle\" /></div><br />\n                  <div class=\"landing-textarea\"><label>Message </label><textarea v-model=\"selectedAction.landingPage.rp3\" placeholder=\"Neg Feedback Content\" ></textarea></div><br/>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Editor container for adding loyalty coupon -->\n\n          <div class=\"message-editor-container\" v-if=\"addingLoyaltyCoupon\">\n            <div class=\"header-container\">\n              <span><button @click=\"closeAllEditing()\">Save Loyalty Coupon</button></span>\n            </div>\n            <div id=\"coupon-editor\">\n              <div class=\"loyalty-coupon-image-container\">\n              </div>\n              <div class=\"coupon-add\">\n                <div class=\"modal-file-import\">\n                  <label>Coupon Image: </label><input type=\"file\" accept=\"image/*\" placeholder=\"Coupon\" @change=\"encodeImageFileAsURL($event)\" required />\n                </div>\n                <div class=\"modal-image-container\">\n                  <img class=\"modal-image-div\" ref=\"locationImageDiv\" v-if=\"selectedAction.loyaltyCoupon\" :style=\"{height: selectedAction.loyaltyCoupon.image.naturalHeight + 'px', width: selectedAction.loyaltyCoupon.image.naturalWidth + 'px'} \"\n                  :src=\"appendImageHeader(selectedAction.loyaltyCoupon.image)\"/>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Editor container for editing the survey in the case of survey automations -->\n\n          <div class=\"message-editor-container full-width\" v-if=\"editingSurvey\">\n            <div class=\"header-container centered\">\n              <span><button @click=\"openPreviewModal()\">Preview Survey Page</button></span>\n              <span><button @click=\"closeAllEditing()\" :disabled=\"saveSurveyDisabled\">Save Survey</button></span>\n            </div>\n            <div id=\"survey-editor\">\n              <div class=\"modal-landing-page-details spacing\">\n                Survey Questions:\n                <div class=\"template-container\">\n                  Survey Templates\n                  <select @change=\"changeQuestions()\" v-model=\"selectedAction.surveyTemplate\">\n                    <option value=\"1\">Internal Questionaire</option>\n                    <option value=\"2\">External Property Management</option>\n                    <option value=\"3\">External Location Survey</option>\n                  </select>\n                </div>\n                <div v-for=\"(question, i) in selectedAction.surveyQuestions\" :key=\"question.order\">\n                  <div class=\"survey-question\" :id=\"i\" v-on:dragstart.stop=\"dragStart($event)\" v-on:dragover.stop=\"dragOver($event)\" draggable=\"true\" v-on:drop.stop=\"dropQuestion($event)\" v-on:dragend.stop=\"dragEnd($event)\">\n                    <div class=\"q-select\" v-if=\"!dragging\">\n                      <select :id=\"i\" v-model=\"question.type\" @change=\"refreshQuestions()\">\n                        <option value=\"1to5\">1 Through 5</option>\n                        <option value=\"disagreeToAgree\">Agree Through Disagree (scale)</option>\n                        <option value=\"yesOrNo\">Yes or No</option>\n                        <option value=\"trueOrFalse\">True or False</option>\n                        <option value=\"selectAny\">Select All that Apply</option>\n                        <option value=\"freeResponse\">Free Form Reply</option>\n                      </select>\n                      <input type=\"checkbox\" v-model=\"question.explain\" v-if=\"question.type != 'freeResponse'\" /><label>Add \"Please Explain\" Follow Up</label>\n                    </div>\n                    <input class=\"title-input\" placeholder=\"Question Title or Qualifier\" v-if=\"!dragging\" :id=\"i\" v-model=\"question.title\" />\n                    <input class=\"question-input\" placeholder=\"Question Body\" v-if=\"!dragging\" :id=\"i\" v-model=\"question.question\" />\n                    <input class=\"drop-box\" v-if=\"dragging\" :id=\"i\" :placeholder=\"question.question\" />\n                    <div class=\"answers\" v-if=\"!dragging && question.type == 'selectAny'\">\n                      <div class=\"adding-answers\">\n                        <label>Add Unique Answers</label>\n                        <div>\n                          <i class=\"fal fa-plus\" title=\"Add To Answers\" @click=\"addAnswer(question)\"></i>\n                          <input type=\"text\" @keydown.enter=\"addAnswer(question)\" v-model=\"question.newOption\">\n                        </div>\n                      </div>\n                      <div class=\"display-survey-answer\" v-for=\"answer in question.answerOptions\">\n                        <span class=\"answer-tag\" >{{answer}} <i class=\"fal fa-times\" title=\"Remove Answer\" @click=\"removeAnswer(question, answer)\"> </i></span>\n                      </div>\n                    </div>\n                    <!-- <i :id=\"i\" class=\"fas fa-expand-arrows-alt\" v-if=\"!dragging\" draggable=\"true\" ></i>\n                    <i :id=\"i\" class=\"fal fa-square\"  v-if=\"dragging\" draggable=\"true\" v-on:dragover.stop=\"dragOver($event)\" v-on:drop.stop=\"dropQuestion($event)\" v-on:dragend.stop=\"dragEnd($event)\" ></i> -->\n                    <i class=\"fal fa-minus\" v-if=\"!dragging\" :class=\"{'middled': question.type == 'selectAny'}\" @click=\"removeSurveyQuestion(i)\"></i>\n                  </div>\n                </div>\n                <span class=\"add-new-survey\" @click=\"addSurveyQuestion()\">ADD NEW <i class=\"fal fa-plus\"></i></span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- The preview landing will need to be tweaked to reflect the new setup. -->\n      <preview-landing class=\"double-modal\" :surveyQs=\"selectedAction.surveyQuestions\" :landingPage=\"selectedAction.landingPage\" :outreachType=\"automationType\" v-if=\"openPreviewCampaign\" v-on:closePreviewModal=\"closePreviewModal()\"></preview-landing>\n      <t-c-p-a-compliance v-if=\"tcpaComplianceOpen\" :user=\"userData\" v-on:closeTCPAModal=\"changeAgreement()\" v-on:cancelSMS=\"cancelSMS()\"></t-c-p-a-compliance>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport { EventService } from \"../main\";\nimport AutomationService from \"./../services/AutomationService\";\nimport config from \"../config.js\";\nimport LocationService from \"./../services/LocationService.js\";\nimport PreviewLanding from \"./PreviewLanding\";\nimport TCPACompliance from \"./TCPACompliance\";\nimport UserService from './../services/UserService';\n\nexport default {\n  name: \"addAutomation\",\n  props: [\"selectedAutomation\", \"automationType\"],\n  components: {\n    PreviewLanding, TCPACompliance\n  },\n  data: function() {\n    return {\n      pageAction: \"Add New\",\n      displayName: \"\",\n      locationId: \"\",\n      automationLocationName: '',\n      userData: '',\n      newOption: '',\n      landingMessage: 'Edit Landing Page',\n      emailPreview: false,\n      smsPreview: false,\n      duplicateId: false,\n      duplicateKey: false,\n      editingTimeCondition: false,\n      editingLandingPage: false,\n      editingSurvey: false,\n      addingLoyaltyCoupon: false,\n      openPreviewCampaign: false,\n      tcpaComplianceOpen: false,\n      agreement: false,\n      initializedUnlayer: false,\n      startPosition: null,\n      endPosition: null,\n      dragging: false,\n      templateType: \"\",\n      selectedIndex: null,\n      selectedAction: {\n        time: 0,\n        email: {\n          subject: \"\",\n          design: {\n            data: \"\",\n            design: \"\"\n          }\n        },\n        sms: {\n          preview: \"\",\n          message: \"\"\n        },\n        surveyQuestions: []\n        // restriction: ''\n      },\n      automation: {\n        name: \"\",\n        automationId: '',\n        locationId: '',\n        type: \"\",\n        language: 'en',\n        identifier: '',\n        triggerEvent: \"\",\n        autoResend: '15724800000',\n        keyword: '',\n        actions: [\n          {\n            time: 0,\n            email: {\n              subject: \"\",\n              design: {\n                data: \"\",\n                design: \"\"\n              }\n            },\n            sms: {\n              preview: \"\",\n              message:\n                \"\"\n            },\n            restriction: \"\"\n          }\n        ]\n      }\n    };\n  },\n  created() {\n    this.setInitialData();\n  },\n  computed: {\n    displayOverview() {\n      if( this.emailPreview == false &&\n          this.smsPreview == false &&\n          this.editingTimeCondition == false &&\n          this.editingLandingPage == false &&\n          this.editingSurvey == false &&\n          this.addingLoyaltyCoupon == false &&\n          this.openPreviewCampaign == false &&\n          this.initializedUnlayer == false ) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    saveSurveyDisabled() {\n      // Needs some sort of trigger in order to refresh the result after one of its dependents is changed... unsure at this time how to trigger that.\n      let vm = this;\n      let test = vm.selectedAction.surveyQuestions;\n       return(test.map(e => {\n        return Object.entries(e).map(x => {\n          return (x[1].length == 0 && (typeof x[1] != 'boolean' || typeof x[1] != 'number') );\n        })\n      })).map(h => {\n        return h.includes(true)\n      })\n      this.$forceUpdate();\n    }\n  },\n  methods: {\n    setInitialData() {\n      this.locationId = localStorage.getItem(\"locationId\");\n      this.automation.locationId = this.locationId;\n      this.displayName = this.automationType;\n      this.automation.type = this.automationType;\n      this.addLandingPageData();\n      this.addSurveyData();\n      this.addLoyaltyCoupon();\n      this.displayName = this.splitAndConvertName(this.displayName);\n      if(this.selectedAutomation) {\n        this.pageAction = 'Update';\n        this.automation = this.selectedAutomation;\n      }\n      this.getUserData();\n      this.checkAgreement();\n    },\n    checkAgreement() {\n      let vm = this;\n      if(vm.locationId) {\n        LocationService.getLocation(vm.locationId).then(response => {\n          if(response.tcpaAgreement) {\n            this.agreement = response.tcpaAgreement.consent;\n          }\n        })\n      }\n    },\n    convertToCaps() {\n      let vm = this;\n      if(vm.automation && vm.automation.keyword) vm.automation.keyword = vm.automation.keyword.toUpperCase().replace(/\\s+/g, '');\n      let allKeys = []\n      AutomationService.getAutomationByType(null, 'loyalty').then(response => {\n        response.results.map(auto => {\n          allKeys.push(auto.keyword)\n        })\n        vm.duplicateKey = allKeys.includes(vm.automation.keyword) ? true : false;\n      })\n    },\n    getUserData() {\n      let vm = this;\n      vm.userData = JSON.parse(localStorage.getItem('currentUser'));\n    },\n    validateID(id) {\n      let vm = this;\n      AutomationService.getAutomationsByLocation(vm.locationId, vm.automation.type).then(response => {\n        let locationAutos = response.result\n        let allIds = []\n        locationAutos.map(auto => {\n          if(auto.status != 'deleted') {\n            if(typeof auto.identifier != 'string') {\n              allIds.push(JSON.stringify(auto.identifier));\n            } else {\n              allIds.push(auto.identifier);\n            }\n          }\n        })\n        vm.duplicateId = allIds.includes(id);\n      })\n    },\n    saveAutomation() {\n      EventService.$emit(\"loading\", \"show\");\n      let vm = this;\n      if(vm.pageAction == 'Add New') {\n        AutomationService.saveAutomation(vm.automation).then(response => {\n          if(response.success) {\n            EventService.$emit(\"loading\", \"hide\");\n            EventService.$emit(\n              \"successMessage\",\n              \"Hooray! Automation Saved.\"\n            );\n            vm.closeModal('Saved');\n          } else {\n            EventService.$emit(\"loading\", \"hide\");\n            EventService.$emit(\n              \"errorMessage\",\n              \"Sorry, something went wrong. Please try again.\"\n            );\n          }\n        })\n      } else {\n        AutomationService.updateAutomation(vm.automation).then(response => {\n          if(response.success) {\n            EventService.$emit(\"loading\", \"hide\");\n            EventService.$emit(\n              \"successMessage\",\n              \"Hooray! Automation Saved.\"\n            );\n            vm.closeModal('Saved');\n          } else {\n            EventService.$emit(\"loading\", \"hide\");\n            EventService.$emit(\n              \"errorMessage\",\n              \"Sorry, something went wrong. Please try again.\"\n            );\n          }\n        })\n      }\n    },\n    splitAndConvertName(data) {\n      return (data.charAt(0).toUpperCase() + data.substr(1)).replace(/([A-Z])/g, \" $1\").trim();\n    },\n\n    // Logic below allowing an action to contain a new sms message, adjust the > 7 in order to change time frame difference to allow more or less time to pass between texts.\n\n    checkTime(time, index) {\n      let newArray = [];\n      this.automation.actions.map(e => {\n        newArray.push(e.time);\n      })\n      let newTimes = newArray.sort( ( a, b ) => a - b );\n      if(index == 0) {\n        return true;\n      } else if (index > 0 && time == 0){\n        return false\n      } else {\n        if(newTimes.indexOf(time) > 0) {\n          if(Math.abs(time - newTimes[newTimes.indexOf(time)-1]) > 7) {\n            return true;\n          } else {\n            return false;\n          }\n        } else  {\n          return true;\n        }\n      }\n    },\n    checkMinTimes(action){\n      let vm = this;\n      let index = vm.selectedIndex;\n      if(index == 0 ) {\n        return 0;\n      } else {\n        return vm.automation.actions[index-1].time;\n      }\n    },\n    addAction(location, index) {\n      if (this.automationType == \"reviewRequest\") {\n        var newAction = {\n          time: 0,\n          email: {\n            subject: \"\",\n            design: {\n              data: \"\",\n              design: \"\"\n            }\n          },\n          sms: {\n            preview: \"\",\n            message: \"\"\n          },\n          notice: {\n            potentialNegRev: true,\n            actualNegRev: true,\n            positiveRev: true,\n            privateRev: true\n          },\n          landingPage: {\n            lp1: \"How Are We Doing?\",\n            lp2: \"Please Rate Your Experience\",\n            lp3: \"At \" + this.automationLocationName + \", we care about your experience and want to hear about it. Please take a moment to let us know how we're doing!\",\n            rp1: \"We're Sorry To Hear That\",\n            rp2: \"Please Tell Us More\",\n            rp3:\n              \"We take our customer feedback very seriously - please let us know how your experience was less than ideal so we can improve in the future. In order to better address the issue, please provide specifics. We appreciate your feedback!\"\n          }\n        };\n      } else if (this.automationType == \"survey\") {\n        var newAction = {\n          time: 0,\n          email: {\n            subject: \"\",\n            design: {\n              data: \"\",\n              design: \"\"\n            }\n          },\n          sms: {\n            preview: \"\",\n            message: \"\"\n          },\n          surveyQuestions: []\n        };\n      } else if (this.automationtype == \"loyalty\") {\n        var newAction = {\n          time: 0,\n          email: {\n            subject: \"\",\n            design: {\n              data: \"\",\n              design: \"\"\n            }\n          },\n          sms: {\n            preview: \"\",\n            message: \"\"\n          },\n          loyaltyCoupon: {\n            image: '',\n            imageType: ''\n          }\n        };\n      } else {\n        var newAction = {\n          time: 0,\n          email: {\n            subject: \"\",\n            design: {\n              data: \"\",\n              design: \"\"\n            }\n          },\n          sms: {\n            preview: \"\",\n            message: \"\"\n          }\n        };\n      }\n      if (location == \"below\") {\n        this.automation.actions.splice(index + 1, 0, newAction);\n      } else if (location == \"above\") {\n        this.automation.actions.splice(index, 0, newAction);\n      }\n    },\n    addLandingPageData() {\n      let vm = this;\n      if (vm.automationType == \"reviewRequest\") {\n        vm.automation.actions[0].notice = {\n          potentialNegRev: true,\n          actualNegRev: true,\n          positiveRev: true,\n          privateRev: true\n        },\n        vm.automation.actions[0].landingPage = {\n          lp1: \"How Are We Doing?\",\n          lp2: \"Please Rate Your Experience\",\n          lp3: \"At \" + this.automationLocationName + \", we care about your experience and want to hear about it. Please take a moment to let us know how we're doing!\",\n          rp1: \"We're Sorry To Hear That\",\n          rp2: \"Please Tell Us More\",\n          rp3:\n            \"We take our customer feedback very seriously - please let us know how your experience was less than ideal so we can improve in the future. In order to better address the issue, please provide specifics. We appreciate your feedback!\"\n        };\n      }\n    },\n    addSurveyData() {\n      let vm = this;\n      if (vm.automationType == \"survey\") {\n        vm.automation.actions[0].surveyQuestions = [];\n      }\n    },\n    addLoyaltyCoupon() {\n      let vm = this;\n      if(vm.automationType == 'loyalty') {\n        vm.automation.actions[0].loyaltyCoupon = {\n          image: '',\n          imageType: '',\n        }\n      }\n    },\n    removeAction(index) {\n      this.automation.actions.splice(index, 1);\n    },\n\n    previewEmail(action) {\n      let vm = this;\n      // Removes any other editing so that other email previews don't interfere.\n      vm.closeAllEditing();\n      vm.selectedAction = action;\n      vm.emailPreview = true;\n      // Checks for proper information in order to pass correct data to mailchimp for testing.\n      if (config.subDomain) {\n        var subDomain = config.subDomain;\n      }\n      if (config.baseUrl) {\n        var baseUrl = config.baseUrl;\n      }\n      // Timeout is set to be manipulated if we need more time later in a single variable.\n      var timeOut = 500;\n      // Check if the action passed into the function already has been saved, so that it is not overwritten if it is.\n      if (action.email.design.design) {\n        // Create the script and iframe to be used to edit the email.\n        vm.$unlayerScript = {\n          id: \"email-editor\",\n          projectId: 1777,\n          displayMode: \"email\"\n        };\n\n        var d = document;\n        var s = d.createElement(\"script\");\n        s.type = \"text/javascript\";\n        s.defer = true;\n        s.src = \"//editor.unlayer.com/embed.js\";\n        var t = d.getElementsByTagName(\"script\")[0];\n        t.parentNode.insertBefore(s, t);\n        // Actually load the existing design in the action, check for initializedUnlayer exists as failsafe for the iframe not being reset properly.\n        setTimeout(() => {\n          if (!vm.initializedUnlayer) {\n            unlayer.init(vm.$unlayerScript);\n            vm.initializedUnlayer = true;\n            unlayer.loadDesign(action.email.design.design);\n          }\n        }, timeOut);\n      } else {\n        // If email design doens't exist for the selected action, create all necessary fields to pass as designTags and set the initial design.\n        LocationService.getLocation(vm.locationId).then(response => {\n          if (response.displayName) {\n            vm.automationLocationName = response.displayName;\n            vm.addLandingPageData();\n            var locationName = response.displayName;\n          } else {\n            var locationName = response.name;\n          }\n          var style = response.locationStyle;\n          var logo = style.logo;\n          var colors = style.buttonColor || \"#4fcbc5\";\n          var buttonColors = vm.generateButtonColors(colors);\n          var automationId = 'AU' + vm.generateAutoId('0', 11);\n          vm.automation.automationId = automationId;\n\n          vm.$unlayerScript = {\n            id: \"email-editor\",\n            projectId: 1777,\n            displayMode: \"email\",\n            designTags: {\n              location_name: locationName,\n              // Update when automation identifier is created.\n              // template_id: vm.automation.name,\n              review_url: \"https://\" + subDomain + \".opiniion.com/automationReviewEmail/\" + vm.locationId + '/' + automationId+ ':' + '*|aid|*/*|cid|*',\n              display_url: \"https://\" + subDomain + \".opiniion.com/leaveFeedback/\" + vm.locationId + '/*|cid|*/Email',\n              unsubscribe_url: \"https://\" + subDomain + \".opiniion.com/unsubscribe?cid=*|cid|*\",\n              image_url: baseUrl + `location\\/showImage\\/` + vm.locationId,\n              survey_url: baseUrl + 'surveyResponse/',\n              button_color_0: buttonColors[0],\n              button_color_1: buttonColors[1],\n              button_color_2: buttonColors[2],\n              button_color_3: buttonColors[3],\n              button_color_4: buttonColors[4],\n              footer_color: style.footerColor || \"lightgrey\"\n            }\n          };\n\n          if (vm.automationType == \"campaign\") {\n            vm.$unlayerScript.templateId = 4977;\n          } else if (vm.automationType == \"survey\") {\n            vm.$unlayerScript.templateId = 4976;\n          } else if (vm.automationType == \"loyalty\") {\n            vm.$unlayerScript.templateId = 5284;\n          } else if (vm.automationType == \"reviewRequest\") {\n            vm.$unlayerScript.templateId = 5307;\n            if (vm.templateType == \"standard\" || !vm.templateType) {\n              vm.$unlayerScript.designTags.message_block =\n                \"Thank you so much for choosing \" +\n                locationName +\n                \"! Your satisfaction is our top priority, and we'd love to hear from you. Please take a few seconds to let us know how we're doing.\";\n            } else if (vm.templateType == \"property\") {\n              vm.$unlayerScript.designTags.message_block =\n                \"Thanks for joining us! Your satisfaction is our top priority, and we'd love to hear from you. Please take a few seconds to rate your experience.\";\n            } else if (vm.templateType == \"service\") {\n              vm.$unlayerScript.designTags.message_block =\n                \"Thank you so much for choosing \" +\n                locationName +\n                \"! Your satisfaction is our top priority, and we'd love to hear from you. Please take a few seconds to let us know how we're doing.\";\n            } else {\n              vm.$unlayerScript.designTags.message_block =\n                \"Thank you so much for choosing \" +\n                locationName +\n                \"! Your satisfaction is our top priority, and we'd love to hear from you. Please take a few seconds to let us know how we're doing.\";\n            }\n          }\n\n          var d = document;\n          var s = d.createElement(\"script\");\n          s.type = \"text/javascript\";\n          s.defer = true;\n          s.src = \"//editor.unlayer.com/embed.js\";\n          var t = d.getElementsByTagName(\"script\")[0];\n          t.parentNode.insertBefore(s, t);\n          setTimeout(() => {\n            if (!vm.initializedUnlayer) {\n              vm.initializedUnlayer = true;\n              unlayer.init(vm.$unlayerScript);\n            }\n          }, timeOut);\n        });\n      }\n    },\n    saveEmailDesign() {\n      let vm = this;\n      if (vm.initializedUnlayer) {\n        unlayer.exportHtml(function(data) {\n          vm.selectedAction.email.design = {\n            data: data.html,\n            design: data.design\n          };\n          vm.removeIframe();\n        });\n      }\n      // console.log(vm.selectedAction.email);\n    },\n    previewSMS(action, i) {\n      let vm = this;\n      vm.selectedAction = action;\n      // Add logic for opening only if index == 0 or display agreement.\n      if(( i == 0 && vm.automation.actions.length && vm.automation.actions.length == 1) || vm.agreement) {\n        vm.closeAllEditing();\n        vm.smsPreview = true;\n      } else {\n        vm.tcpaComplianceOpen = true;\n      }\n    },\n    changeAgreement() {\n      this.agreement = true;\n      // Activate this line of code once back end is pushed.\n      LocationService.setTCPAAgreement(this.locationId, this.userData).then(response => {\n        console.log(response);\n      })\n      this.tcpaComplianceOpen = false;\n      this.previewSMS(this.selectedAction);\n    },\n    cancelSMS() {\n      this.tcpaComplianceOpen = false;\n      this.selectedAction = {\n        time: 0,\n        email: {\n          subject: \"\",\n          design: {\n            data: \"\",\n            design: \"\"\n          }\n        },\n        sms: {\n          preview: \"\",\n          message: \"\"\n        },\n        surveyQuestions: []\n        // restriction: ''\n      }\n    },\n    generateAutoId(possItems, length) {\n      var text = '';\n      var options = '';\n      if (possItems.indexOf('0') > -1) options += '0123456789';\n      if (possItems.indexOf('a') > -1) options += 'abcdefghijklmnopqrstuvwxyz';\n      if (possItems.indexOf('A') > -1) options += 'ABCDEFGHIkLMNOPQRSTUVWXYZ';\n      for (var i=0; i<length && options.length>0; i++) {\n        text += options.charAt(Math.floor(Math.random() * options.length));\n      }\n      return text;\n    },\n    editTimeCondition(action, index) {\n      let vm = this;\n      vm.closeAllEditing();\n      vm.selectedAction = action;\n      vm.selectedIndex = index;\n      vm.editingTimeCondition = true;\n    },\n    editLandingPage(action) {\n      let vm = this;\n      if(action.email.subject) {\n        vm.closeAllEditing();\n        vm.selectedAction = action;\n        vm.editingLandingPage = true;\n        vm.landingMessage = 'Edit Landing Page Details'\n      } else {\n        vm.landingMessage = 'Please create an email before designing the landing page.'\n      }\n    },\n    editSurvey(action) {\n      let vm = this;\n      vm.closeAllEditing();\n      vm.selectedAction = action;\n      vm.editingSurvey = true;\n    },\n    editLoyaltyCoupon(action) {\n      let vm = this;\n      vm.closeAllEditing();\n      vm.selectedAction = action;\n      vm.addingLoyaltyCoupon = true;\n    },\n    openPreviewModal() {\n      this.openPreviewCampaign = true;\n    },\n    closeAllEditing() {\n      let vm = this;\n      vm.saveEmailDesign();\n      vm.emailPreview = false;\n      vm.smsPreview = false;\n      vm.editingTimeCondition = false;\n      vm.editingLandingPage = false;\n      vm.editingSurvey = false;\n      vm.addingLoyaltyCoupon = false;\n      vm.selectedIndex = null;\n    },\n    cancelEmailEdit() {\n      let vm = this;\n      vm.removeIframe();\n      vm.emailPreview = false;\n      vm.smsPreview = false;\n      vm.editingTimeCondition = false;\n      vm.editingLandingPage = false;\n      vm.editingSurvey = false;\n      vm.addingLoyaltyCoupon = false;\n    },\n    removeIframe() {\n      let vm = this;\n      if (vm.initializedUnlayer) {\n        var x = document.getElementsByTagName(\"iframe\")[0];\n        var d = document.getElementsByTagName(\"script\")[0];\n        if (x) {\n          x.remove();\n        }\n        if (d) {\n          d.remove();\n        }\n      }\n      vm.initializedUnlayer = false;\n    },\n    addAnswer(question) {\n      let vm = this;\n      question.answerOptions.push(question.newOption);\n      question.newOption = '';\n      vm.refreshQuestions();\n    },\n    removeAnswer(question, answer) {\n      let vm = this;\n      question.answerOptions.splice(question.answerOptions.indexOf(answer), 1);\n      vm.refreshQuestions();\n    },\n    closePreviewModal() {\n      this.openPreviewCampaign = false;\n    },\n    changeQuestions() {\n      let vm = this;\n      if (vm.selectedAction.surveyTemplate == \"none\") {\n        vm.selectedAction.surveyQuestions = [];\n      } else if (vm.selectedAction.surveyTemplate == \"1\") {\n        vm.selectedAction.surveyQuestions = [\n          { order: 1, type: \"1to5\", explain: true, title: \"With 1 being lowest and 5 being highest: \", question: \"How would you rate our work culture?\" },\n          { order: 2, type: \"selectAny\", explain: true, title: \"Select All That Apply:\", question: \"What do you enjoy most about working here?\", answerOptions:[] },\n          { order: 3, type: \"selectAny\", explain: true, title: \"Select All That Apply:\", question: \"What do you enjoy least about working here?\", answerOptions:[] },\n        ];\n      } else if (vm.selectedAction.surveyTemplate == \"2\") {\n        vm.selectedAction.surveyQuestions = [\n          { order: 1, type: \"1to5\", explain: true, title: \"With 1 being lowest and 5 being highest: \", question: \"How would you rate our facilties?\" },\n          { order: 2, type: \"selectAny\", explain: true, title: \"Select All That Apply:\", question: \"What do you enjoy most about living here?\", answerOptions:[] },\n          { order: 3, type: \"selectAny\", explain: true, title: \"Select All That Apply:\", question: \"What do you enjoy least about living here?\", answerOptions:[] },\n        ];\n      } else if (vm.selectedAction.surveyTemplate == \"3\") {\n        vm.selectedAction.surveyQuestions = [\n          { order: 1, type: \"1to5\", explain: true, title: \"With 1 being lowest and 5 being highest: \", question: \"How would you rate our service?\" },\n          { order: 2, type: \"selectAny\", explain: true, title: \"Select All That Apply:\", question: \"What do we do well?\", answerOptions:[] },\n          { order: 3, type: \"selectAny\", explain: true, title: \"Select All That Apply:\", question: \"What could we improve on?\", answerOptions:[] },\n        ];\n      }\n    },\n    encodeImageFileAsURL(event) {\n      let filesList = event.target.files[0];\n      let vm = this;\n      let reader = new FileReader();\n      reader.onloadend = function() {\n        if (reader.result.length > 500000 * 1.36) {\n          vm.showLogoSizeError = true;\n        } else {\n          vm.selectedAction.loyaltyCoupon.image = reader.result;\n          let selection = reader.result.substr(0, 25);\n          vm.selectedAction.loyaltyCoupon.imageType = selection.substr((selection.indexOf(\"/\")+1), (selection.indexOf(';')-1 - selection.indexOf(\"/\")));\n          vm.addingLoyaltyCoupon = false;\n          vm.addingLoyaltyCoupon = true;\n        }\n      };\n      reader.readAsDataURL(filesList);\n    },\n    appendImageHeader(imgText) {\n      if (imgText) {\n        return imgText;\n      }\n    },\n    generateButtonColors(initialColor) {\n      let vm = this;\n      return [\n        vm.lightenColor(initialColor, 40),\n        vm.lightenColor(initialColor, 30),\n        vm.lightenColor(initialColor, 20),\n        vm.lightenColor(initialColor, 10),\n        initialColor\n      ];\n    },\n    lightenColor(initialColor, amt) {\n      var col = initialColor.slice(1);\n\n      var num = parseInt(col, 16);\n\n      var r = (num >> 16) + amt;\n\n      if (r > 255) r = 255;\n      else if (r < 0) r = 0;\n\n      var b = ((num >> 8) & 0x00ff) + amt;\n\n      if (b > 255) b = 255;\n      else if (b < 0) b = 0;\n\n      var g = (num & 0x0000ff) + amt;\n\n      if (g > 255) g = 255;\n      else if (g < 0) g = 0;\n\n      return (\n        \"#\" +\n        String(\"000000\" + (g | (b << 8) | (r << 16)).toString(16)).slice(-6)\n      );\n    },\n    addSurveyQuestion() {\n      let vm = this;\n      let newOrder = vm.selectedAction.surveyQuestions.length + 1;\n      vm.selectedAction.surveyQuestions.push({\n        order: newOrder,\n        type: \"\",\n        title: \"\",\n        question: \"\"\n      });\n      vm.refreshQuestions();\n    },\n    refreshQuestions() {\n      let vm = this;\n      vm.editingSurvey = false;\n      vm.editingSurvey = true;\n    },\n    removeSurveyQuestion(index) {\n      this.selectedAction.surveyQuestions.splice(index, 1);\n      this.refreshQuestions();\n    },\n    dragStart(event) {\n      this.dragging = true;\n      let dt = event.dataTransfer;\n      dt.setData(\"text/plain\", event.target.id);\n      var el = document.getElementsByClassName(\"disable-on-drag\");\n      var i;\n      for (i = 0; i < el.length; i++) {\n        el[i].disabled = true;\n      }\n    },\n    dragOver(event) {\n      event.dataTransfer.dropEffect = \"move\";\n    },\n    dropQuestion(event) {\n      let dt = event.dataTransfer;\n      var data = event.dataTransfer.getData(\"text/plain\");\n      this.startPosition = data;\n      this.endPosition = event.target.id;\n    },\n    dragEnd(event) {\n      let vm = this;\n      let start = this.startPosition;\n      let end = this.endPosition;\n      var newArray = [];\n      if ((start && end) && start != end) {\n        vm.selectedAction.surveyQuestions.map((question, i) => {\n          if (i == start) {\n            i = end;\n            newArray[i] = question;\n          } else {\n            if (end > start) {\n              if (i > start && i <= end) {\n                i = i - 1;\n                newArray[i] = question;\n              } else {\n                newArray[i] = question;\n              }\n            } else if (end < start) {\n              if (i < start && i >= end) {\n                i = i + 1;\n                newArray[i] = question;\n              } else {\n                newArray[i] = question;\n              }\n            }\n          }\n        });\n        vm.selectedAction.surveyQuestions = newArray;\n      }\n      var el = document.getElementsByClassName(\"disable-on-drag\");\n      var i;\n      for (i = 0; i < el.length; i++) {\n        el[i].disabled = false;\n      }\n      vm.dragging = false;\n    },\n    closeModal(msg) {\n      if(msg) {\n        this.$emit(\"closeModal\");\n        this.automation = {};\n        this.selectedAction = {};\n        EventService.$emit(\"loading\", \"hide\");\n      } else {\n        if(confirm('Are you sure you would like to exit without saving?')) {\n        this.$emit(\"closeModal\");\n        this.automation = {};\n        this.selectedAction = {};\n        EventService.$emit(\"loading\", \"hide\");\n        }\n      }\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.modal-mask {\n  height: auto;\n}\n\n.automation-container {\n  width: calc(100% - 75px);\n  min-width: 1430px;\n  min-height: calc(100% - 100px);\n  margin: 55px 0 0 55px;\n  background: white;\n}\n\nheader {\n  border-bottom: 2px solid lightgrey;\n  display: flex;\n  justify-content: space-between;\n  align-content: center;\n  align-items: center;\n  font-size: 25px;\n  text-transform: capitalize;\n}\n\nheader span {\n  margin-left: 25px;\n}\n\nheader i {\n  margin-right: 25px;\n}\n\n.automations-style-container {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.automation-action-container {\n  width: 28%;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  min-height: 800px;\n  margin: 25px 0 0 25px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* overflow-y: scroll; */\n}\n\n.initial-trigger {\n  margin-top: 10px;\n}\n\n.trigger-select {\n  margin: 20px 0 20px 0;\n}\n\n.action-container {\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid grey;\n  padding-bottom: 10px;\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.horizontal-divider {\n  border-bottom: 1px solid lightgrey;\n  width: 300px;\n  /* margin-top: 10px; */\n}\n\n.scroll-area {\n  height: 650px;\n  width: 90%;\n  padding: 20px;\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n}\n\n.automation-actions-list {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.top {\n  font-size: 25px;\n  transform: translateY(13px);\n  background: white;\n  z-index: 999;\n}\n\n.bottom {\n  font-size: 25px;\n  transform: translateY(-13px);\n  background: white;\n}\n\n.automation-action {\n  display: flex;\n  flex-direction: column;\n  border: 1px solid grey;\n  align-items: center;\n  width: 93%;\n  font-size: 20px;\n  padding: 20px 10px;\n  position: relative;\n}\n\n.vertical-divider-line {\n  margin-top: 2px;\n  margin-bottom: 2px;\n  transform: translateY(1px);\n  width: 1px;\n  height: 13px;\n  background: black;\n  /* border-right: 1px solid black; */\n}\n\n.action-box {\n  padding: 0px 10px;\n  border: 1px solid grey;\n  box-shadow: 2px 2px 1px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  font-size: 15px;\n}\n\n.message {\n  color: white;\n  background: grey;\n}\n\n.fa-plus-circle {\n  cursor: pointer;\n}\n\n.fa-pencil {\n  font-size: 15px;\n  cursor: pointer;\n  margin-left: 10px;\n}\n\n.fa-envelope {\n  margin-right: 20px;\n  transform: translateY(1px);\n}\n\n.fa-mobile-android {\n  margin-right: 20px;\n  transform: translateY(1px);\n}\n\n.fa-times-circle {\n  position: absolute;\n  right: 0;\n  margin-right: 5px;\n  margin-bottom: 5px;\n  bottom: 0;\n  cursor: pointer;\n}\n\n.fa-times {\n  cursor: pointer;\n}\n\n.fa-columns {\n  margin-right: 20px;\n}\n\n.fa-info-circle {\n  font-size: 14px;\n  margin-left: 10px;\n}\n\n.message-editor-container {\n  border: 2px solid lightgrey;\n  width: 68%;\n  margin-left: 20px;\n  min-height: 700px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 18px;\n}\n\n.delay-input {\n  width: 30px;\n}\n\n.header-container button {\n  background: #4fcbc5;\n  color: white;\n  padding: 10px 20px;\n  margin-left: 40px;\n  margin-top: 10px;\n  border-radius: 2px;\n  cursor: pointer;\n}\n\n.overview {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n}\n\n.sms-message-container {\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n}\n\n.sms-message-container textarea {\n  width: 500px;\n  max-width: 600px;\n  height: 50px;\n  max-height: 75px;\n}\n\n.sms-message-container span {\n  font-size: 14px;\n}\n\n.sms-preview-display {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  margin-top: 20px;\n}\n\n.divider-line {\n  position: absolute;\n  border-bottom: 1px solid black;\n  transform: translateY(-130px);\n  padding: 0 0 10px 20px;\n  width: 200px;\n  font-size: 18px;\n  font-weight: bolder;\n}\n\n.sms-message-preview {\n  background: lightskyblue;\n  max-width: 185px;\n  position: absolute;\n  border-radius: 10px;\n  transform: translateY(-20px);\n  padding: 5px 10px;\n}\n\n.landing-page-details-container {\n  width: 500px;\n  margin-top: 30px;\n}\n.landing-page-details-container input {\n  width: 300px;\n}\n.landing-page-details-container textarea {\n  width: 500px;\n  height: 80px;\n  min-width: 500px;\n  min-height: 80px;\n  max-width: 550px;\n  max-height: 200px;\n}\n\n.landing-detail {\n  display: flex;\n  justify-content: space-between;\n}\n\n.landing-textarea textarea {\n  margin-top: 10px;\n}\n\n.survey-question {\n  padding: 10px 10px;\n  border: 1px solid darkgrey;\n  border-radius: 1px;\n  margin-bottom: 20px;\n  width: 100%;\n  min-height: 80px;\n}\n\n.survey-question input {\n  margin: 5px;\n}\n\n.fa-minus {\n  margin-bottom: 35px;\n  margin-right: 15px;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  cursor: pointer;\n}\n\n.add-new-survey {\n  float: right;\n  background: #4fcbc5;\n  padding: 5px 10px;\n  margin-top: 10px;\n  cursor: pointer;\n  color: white;\n}\n\n.fa-plus {\n  margin-left: 10px;\n  cursor: pointer;\n}\n\n.drop-box {\n  width: 80%;\n  transform: translateX(70px) translateY(15px);\n  border: 1px solid grey;\n  background: lightgrey;\n  text-align: center;\n\n}\n\n.drop-box:hover {\n  background: rgb(231, 231, 231);\n}\n\n.campaign-email-editor {\n  width: 100%;\n  height: 100%;\n  border: 1px solid lightgrey;\n}\n\n.unavailable {\n  color: #a9a9a9;\n}\n\n.close-command {\n  margin-left: 15px;\n  font-size: 15px;\n  color: #4fcbc5;\n  cursor: pointer;\n}\n\n.modal-image-div {\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n\n.warning {\n  color: red;\n}\n\n.answers {\n  display: flex;\n  flex-direction: row;\n}\n\n.adding-answers {\n  display: flex;\n  flex-direction: column;\n}\n\n.answers input {\n  width: 200px;\n}\n\n.survey-question {\n  position: relative;\n}\n\n.display-survey-answer {\n  margin: 20px 0 0 10px;\n}\n\n.middled {\n  margin-bottom: 70px;\n}\n\n.inactive {\n  color: grey;\n}\n\n.input-name {\n  width: 90%;\n  text-align: center;\n}\n\n.header-save-container {\n  margin-bottom: 20px;\n}\n\n.header-save-container button {\n  background: #4fcbc5;\n  color: white;\n  padding: 10px 20px;\n  /* margin-left: 40px; */\n  margin-top: 10px;\n  border-radius: 2px;\n  cursor: pointer;\n}\n\n.display-info {\n  margin-bottom: 10px;\n}\n\n.spacing {\n  margin: 15px 0 0 20px;\n  width: 95%;\n}\n\n.template-container {\n  margin-top: 15px;\n  margin-bottom: 15px;\n}\n\n.template-container select {\n  margin-left: 20px\n}\n\n.q-select input {\n  margin-left: 20px;\n}\n\n.q-select label{\n  font-size: 14px;\n}\n\n.survey-editor {\n  width: 100%;\n}\n\n.title-input {\n  width: 200px;\n}\n\n.question-input {\n  width: 400px;\n}\n\n.answer-tag {\n  border: 1px solid grey;\n  padding: 5px 10px;\n  border-radius: 20px;\n}\n\n.answer-tag i{\n  transform: translateY(2px);\n  margin-left: 5px;\n}\n\n.full-width {\n  align-items: unset;\n}\n\n.centered {\n  margin-left: 50%;\n  transform: translateX(-50%);\n}\n\n.dupe-message {\n  color: red;\n  font-size: 14px;\n}\n\n.modal-follow-up-details {\n  margin-bottom: 5px;\n}\n\n</style>"]}]}