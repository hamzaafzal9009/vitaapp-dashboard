{"remainingRequest":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/AdminDashboard.vue?vue&type=style&index=0&id=61f853b5&scoped=true&lang=css&","dependencies":[{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/AdminDashboard.vue","mtime":1581270622000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAa2V5ZnJhbWVzIHJpcHBsZSB7CiAgMCUge2JhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUsIHJnYmEoMjM5LDIzOSwyMzksMSkgMCUsIHJnYmEoNzksMjAzLDE5NywxKSAxMDAlKX0gIAogIDIlIHtiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoY2lyY2xlLCByZ2JhKDIzOSwyMzksMjM5LDEpIDAlLCByZ2JhKDE3OCwyMjMsMjM3LDEpIDIlLHJnYmEoMTc4LDIyMywyMzcsMSkgMyUsIHJnYmEoNzksMjAzLDE5NywxKSAxMDAlKX0KICA5OSUge2JhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUsIHJnYmEoMjM5LDIzOSwyMzksMSkgMCUsIHJnYmEoMTc4LDIyMywyMzcsMSkgOTglLCByZ2JhKDE3OCwyMjMsMjM3LDEpIDk5JSwgcmdiYSg3OSwyMDMsMTk3LDEpIDEwMCUpfQogIDEwMCUge2JhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudChjaXJjbGUsIHJnYmEoMjM5LDIzOSwyMzksMSkgMCUsIHJnYmEoNzksMjAzLDE5NywxKSAxMDAlKX0gIAp9CgouZGFzaGJvYXJkLWdyb3VwIHsKICBkaXNwbGF5OiBmbGV4OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKfQoKLmRhc2hib2FyZC1ncm91cCAuY29sdW1uIHsKICBtYXJnaW4tbGVmdDogMjBweDsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgYm94LXNoYWRvdzogMHB4IDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI1KTsKICBwYWRkaW5nOiAyMHB4OwogIGJhY2tncm91bmQ6IHdoaXRlOwogIGZsZXg6IDE7Cn0KCi5sb2NhdGlvbi1jb250cm9scy1zZWFyY2ggewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBsZWZ0OiAwOwogIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNjBweCkgdHJhbnNsYXRlWCg0MjBweCk7Cn0KCmg0IHsKICBib3JkZXItYm90dG9tOiAwLjVweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMjUpOwogIHdpZHRoOiAyNTBweDsKICBwYWRkaW5nLWJvdHRvbTogNXB4Owp9CgoubWluaS1jb2x1bW4gewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9Ci5pbnRlcmlvci1jb2x1bW4gewogIG1hcmdpbi1yaWdodDogMjVweDsKfQoKLmJveCB7CiAgYm9yZGVyOiAxcHggc29saWQgZ3JleTsKICBwYWRkaW5nOiAxMHB4OwogIHBhZGRpbmctbGVmdDogMjBweDsKICBtYXJnaW4tYm90dG9tOiAyMHB4OwogIGhlaWdodDogNDB2aDsKICBvdmVyZmxvdy15OiBzY3JvbGw7Cn0KCgouZGF0ZS1idXR0b24gewogIG1hcmdpbi1sZWZ0OiAxNXB4OwogIHBhZGRpbmc6IDVweCAxMHB4OwogIGJhY2tncm91bmQ6ICM0ZmNiYzU7CiAgYmFja2dyb3VuZDogcmFkaWFsLWdyYWRpZW50KGNpcmNsZSwgcmdiYSgyMzksMjM5LDIzOSwxKSAwJSxyZ2JhKDc5LDIwMywxOTcsMSkgMTAlLCByZ2JhKDc5LDIwMywxOTcsMSkgMTAwJSk7Cn0KCi5kYXRlLWJ1dHRvbjphY3RpdmUgewogIGFuaW1hdGlvbjogcmlwcGxlIC41cyBzdGVwcygxMDApOwp9CgpAbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KSB7CiAgLmRhc2hib2FyZC1ncm91cCB7CiAgICAvKiBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7ICovCiAgICBkaXNwbGF5OiBibG9jazsKICB9Cn0K"},{"version":3,"sources":["AdminDashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoTA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"AdminDashboard.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"dashboard-container\">\n          <div class=\"report-date-range\">\n          <span>From <input type=\"date\" v-model=\"startDate\"/> to <input type=\"date\" v-model=\"endDate\"/> <button class=\"date-button\" @click=\"dateChange()\">Run</button> </span>\n        </div>\n        <div class=\"dashboard-group\">\n              <div class=\"column\">\n              <div class=\"box\">\n                <h4>Total Businesses</h4>\n                <p>{{totalLocations}}</p>\n              </div>\n              <div class=\"box\">\n                <h4>Client Engagement</h4>\n                <h5>Total Customers Submitted</h5>\n                <h6>{{totalCustomers}}</h6>\n                <h5>Total Customers Engaged</h5>\n                <h6>{{interactions}}</h6>\n              </div>\n              <div class=\"box\" >\n                <h4>Notifications</h4>\n                <p v-if=\"!notifications\">There are no notifications at this timeÂ </p>\n              </div>\n              <div class=\"box\">\n                <h4>GMB Not Linked</h4>\n                <span class=\"location-controls-search\">\n                  <span class=\"location-controls-search-icon\">\n                    <i class=\"fas fa-search\"></i>\n                  </span>\n                  <input v-model=\"searchText\" placeholder=\"Filter locations...\"/>\n                </span>\n                <div v-for=\"(location, lindex) in filteredLocations\" :key=\"lindex\">\n                  <h5>{{location.name}}</h5>\n                </div>\n                  <h5 v-if=\"filteredLocations.length == 0\">No locations matched your filter.</h5>\n              </div>\n              <div class=\"box mini-column\">\n                <div class=\"interior-column\">\n                  <input v-model=\"searchText2\" placeholder=\"Filter locations...\"/>\n                <h4>Customers Added By Location</h4>\n                <div v-for=\"(customers, cindex) in filteredLocations2\" :key=\"cindex\">\n                  <h5>{{customers.name}}</h5>\n                  <h6>Customers: {{customers.newCustomers}}</h6>\n                </div>\n                </div>\n              </div>\n\n              </div>\n              <div class=\"column\">\n              <div class=\"box\">\n                <h4>Messages Sent</h4>\n                <h5>Email</h5>\n                <h6>Unsent: {{unsentEmails}} Sent: {{sentEmails}}</h6>\n                <h5>SMS</h5>\n                <h6>Unsent: {{unsentSMS}} Sent: {{sentSMS}}</h6>\n              </div>\n              <div class=\"box\">\n                <h4>Reviews Data</h4>\n                <h5>Positive Reviews</h5>\n                <h6>{{recentReviews}}</h6>\n                <h5>Private Feedback</h5>\n                <h6>{{recentFeedbacks}}</h6>\n              </div>    \n                <div class=\"box\">\n                <h4>At Risk Accounts</h4>\n                <p v-show=\"atRiskCustomers.length < 1 \">There are currently no at risk clients</p>\n                <div v-for=\"(account, rindex) in atRiskCustomers\" :key=\"rindex\">\n                  <p>{{account.name}} : {{account.newCustomers}}</p>\n                </div>\n              </div>\n              <div class=\"box\">\n                <h4>Inactive Users</h4>\n                <p v-show=\"users.length < 1 \">There are currently no inactive users</p>                \n                <div v-for=\"(user, uindex) in users\" :key=\"uindex\">\n                  <p>{{user.name}}</p>\n                  <p>{{user.locationId}}</p>\n                </div>\n              </div>\n              <div class=\"box\">\n                <h4>High Usage Clients</h4>\n                <p v-show=\"highUsageCustomers.length < 1 \">There are currently no high usage clients</p>\n                <div v-for=\"(high, hindex) in highUsageCustomers\" :key=\"hindex\">\n                  <p>{{high.name}} : {{high.newCustomers}}</p>\n                </div>\n              </div>\n              </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { EventService } from \"../main\";\nimport DashboardService from \"./../services/DashboardService\";\nimport CustomerService from \"./../services/CustomerService\";\nimport LocationService from \"./../services/LocationService\";\nimport UserService from \"./../services/UserService\";\nimport ReportService from \"./../services/ReportService\";\nimport CommsService from \"./../services/CommsService\";\n\nexport default {\n  name: \"Admin Dashboard\",\n  components: {},\n  data: function() {\n    return {\n      startDate: '1970-01-01',\n      endDate: '2070-01-01',\n      userRole: null,\n      searchText: \"\",\n      searchText2: \"\",\n      details: {},\n      locations: [],\n      unlinkedLocations: [],\n      customersAdded: null,\n      customerByLocation: [],\n      locationIds: [],\n      allLocationCustomers: [],\n      notifications: null,\n      users: [],\n      recentFeedbacks: 0,\n      newCustomers: [],\n      interactions: 0,\n      recentReviews: 0,\n      unsentEmails: 0,\n      sentEmails: 0,\n      unsentSMS: 0,\n      sentSMS: 0,\n      totalLocations: 0\n      \n    };\n  },\n  computed: {\n    filteredLocations() {\n      let vm = this;\n      let filteredList = this.unlinkedLocations.filter(location => {\n        let locationMatch = false;\n        locationMatch =\n          locationMatch ||\n          location.name.toLowerCase().indexOf(vm.searchText.toLowerCase()) > -1;\n        return locationMatch;\n      });\n      return filteredList;\n    },\n    filteredLocations2() {\n      let vm = this;\n      let filteredList2 = this.newCustomers.filter(location => {\n        let locationMatch = false;\n        locationMatch =\n          locationMatch ||\n          location.name.toLowerCase().indexOf(vm.searchText2.toLowerCase()) > -1;\n        return locationMatch;\n      });\n      return filteredList2;\n    },\n    totalCustomers() {\n      let vm = this;\n      let numCust = [0]\n      this.filteredLocations2.map((e,i) => {\n        numCust.push(e.newCustomers);\n      })\n        var reducedCustomer = numCust.reduce((a, b) => { \n          return a+b; \n        })\n    return reducedCustomer;\n    },\n    atRiskCustomers() {\n      let vm = this;\n      let atRisk = [];\n      vm.customerByLocation.map((e,i) => {\n        if(e.newCustomers < 10) atRisk.push(e)\n      })\n      return atRisk;\n    },\n    highUsageCustomers() {\n      let vm = this;\n      let highUse = [];\n      vm.customerByLocation.map((e,i) => {\n        if(e.newCustomers > 1000) highUse.push(e)\n      })\n      return highUse;\n    }\n  },\n  created() {\n    let todaysDate = Date.now();\n    let todayPlusOne = todaysDate+86500000;\n    var oneMonthAgo = new Date().getTime() - 1000 * 60 * 60 * 24 * 30;\n    this.startDate = new Date(oneMonthAgo).toISOString().substring(0, 10);\n    this.endDate = new Date(todayPlusOne).toISOString().substring(0, 10);\n    this.getAllLocations();\n    // this.getAdminOmniReport();\n    EventService.$on(\"locationChange\", this.getAdminOmniReport);\n  },\n  beforeDestroy: function() {\n    EventService.$off(\"locationChange\", this.getAdminOmniReport);\n  },\n  methods: {\n    getAdminOmniReport() {\n      var vm = this;\n      EventService.$emit(\"loading\", \"show\");\n      var locationId = localStorage.getItem('locationId');\n      vm.getReportCustomers(locationId);\n      vm.getReportFeedback(locationId);\n      vm.getReportEngagement(locationId);\n      vm.getReportGMB(locationId);\n      vm.getReportEmails(locationId);\n      vm.getReportSMS(locationId);\n    },\n    getReportCustomers(locationId) {\n      let vm = this;\n      ReportService.getAdminOmniReportCustomers(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationId).then(response => {\n      vm.newCustomers = response.newCustomersByLocation;\n        vm.customerByLocation = response.newCustomersByLocation;\n        EventService.$emit(\"loading\", \"hide\");\n      }, error => {\n        console.log(error)\n      })\n    },\n    getReportFeedback(locationId) {\n      let vm = this;\n      ReportService.getAdminOmniReportFeedback(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationId).then(response => {\n        vm.recentFeedbacks = response.negativeReviews;\n        vm.recentReviews = response.positiveReviews;\n        vm.privateReviews = response.privateReviews;\n        vm.publicReviews = response.publicReviews;\n        EventService.$emit(\"loading\", \"hide\");\n      }, error => {\n        console.log(error)\n      })\n    },\n    getReportEngagement(locationId) {\n      let vm = this;\n      ReportService.getAdminOmniReportEngagement(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationId).then(response => {\n        vm.interactions = response[0].engagementCount;\n        EventService.$emit(\"loading\", \"hide\");\n      }, error => {\n        console.log(error)\n      })\n    },\n    getReportGMB(locationId) {\n      let vm = this;\n      ReportService.getAdminOmniReportGMB(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationId).then(response => {\n        vm.unlinkedLocations = response.unlinkedLocations;\n        EventService.$emit(\"loading\", \"hide\");\n      }, error => {\n        console.log(error)\n      })\n    },\n    getReportEmails(locationId) {\n      let vm = this;\n      ReportService.getAdminOmniReportEmails(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationId).then(response => {\n        vm.unsentEmails = response.unsentEmails;\n        vm.sentEmails = response.sentEmails;\n        EventService.$emit(\"loading\", \"hide\");\n      }, error => {\n        console.log(error)\n      })\n    },\n    getReportSMS(locationId) {\n      let vm = this;\n      ReportService.getAdminOmniReportSMS(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationId).then(response => {\n        vm.unsentSMS = response.unsentSms;\n        vm.sentSMS = response.sentSms;\n        EventService.$emit(\"loading\", \"hide\");\n      }, error => {\n        console.log(error)\n      })\n    },\n    dateChange() {\n      this.getAdminOmniReport();\n    },\n    getAllLogs() {\n      let vm = this;\n      CommsService.getEmailLogs().then(response => {\n        response.map((e, i) => {\n          if (e.status == \"unsent\") {\n            vm.unsentEmails++;\n          }\n          if (e.status == \"sent\") {\n            vm.sentEmails++;\n          }\n        });\n      });\n      CommsService.getSMSLogs().then(response => {\n        response.map((e, i) => {\n          if (e.status == \"unsent\") {\n            vm.unsentSMS++;\n          }\n          if (e.status == \"sent\") {\n            vm.sentSMS++;\n          }\n        });\n      });\n    },\n    getAllLocations() {\n      this.totalLocations = 0;\n      var vm = this;\n      DashboardService.getBusinessInfo()\n        .then(function(response) {\n            vm.totalLocations = response;\n        }, function(error) {\n          console.log(error);\n      });\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n\n@keyframes ripple {\n  0% {background: radial-gradient(circle, rgba(239,239,239,1) 0%, rgba(79,203,197,1) 100%)}  \n  2% {background: radial-gradient(circle, rgba(239,239,239,1) 0%, rgba(178,223,237,1) 2%,rgba(178,223,237,1) 3%, rgba(79,203,197,1) 100%)}\n  99% {background: radial-gradient(circle, rgba(239,239,239,1) 0%, rgba(178,223,237,1) 98%, rgba(178,223,237,1) 99%, rgba(79,203,197,1) 100%)}\n  100% {background: radial-gradient(circle, rgba(239,239,239,1) 0%, rgba(79,203,197,1) 100%)}  \n}\n\n.dashboard-group {\n  display: flex;\n  justify-content: space-between;\n}\n\n.dashboard-group .column {\n  margin-left: 20px;\n  margin-right: 20px;\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.25);\n  padding: 20px;\n  background: white;\n  flex: 1;\n}\n\n.location-controls-search {\n  position: absolute;\n  left: 0;\n  transform: translateY(-60px) translateX(420px);\n}\n\nh4 {\n  border-bottom: 0.5px solid rgba(0, 0, 0, 0.25);\n  width: 250px;\n  padding-bottom: 5px;\n}\n\n.mini-column {\n  display: flex;\n  justify-content: space-between;\n}\n.interior-column {\n  margin-right: 25px;\n}\n\n.box {\n  border: 1px solid grey;\n  padding: 10px;\n  padding-left: 20px;\n  margin-bottom: 20px;\n  height: 40vh;\n  overflow-y: scroll;\n}\n\n\n.date-button {\n  margin-left: 15px;\n  padding: 5px 10px;\n  background: #4fcbc5;\n  background: radial-gradient(circle, rgba(239,239,239,1) 0%,rgba(79,203,197,1) 10%, rgba(79,203,197,1) 100%);\n}\n\n.date-button:active {\n  animation: ripple .5s steps(100);\n}\n\n@media (max-width: 1200px) {\n  .dashboard-group {\n    /* justify-content: flex-start; */\n    display: block;\n  }\n}\n</style>\n"]}]}