{"remainingRequest":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/components/CSVOld.vue?vue&type=style&index=0&id=6d3b4ff1&scoped=true&lang=css&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/components/CSVOld.vue","mtime":1581270622000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2VsZWN0LWdyb3VwLWNvbnRhaW5lciB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOwogIHdpZHRoOiAxMDAlOwp9Cgouc2VsZWN0LWdyb3VwLW9wdGlvbiB7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwp9Cgouc2VsZWN0LWdyb3VwLW9wdGlvbiBsYWJlbCB7CiAgZm9udC1zaXplOiAxMXB4OwogIG1hcmdpbi1ib3R0b206IDVweDsKICBjb2xvcjogIzlhOWE5YTsKfQoKLmNhcGl0YWxpemUgewogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9CgoKLmN1c3RvbWVyLXRhYmxlIHsKICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICBmb250LXNpemU6IDE0cHg7CiAgcGFkZGluZzogMTBweDsKICBjbGVhcjogYm90aDsKICBvdmVyZmxvdy15OiBzY3JvbGw7CiAgaGVpZ2h0OiA1MHZoOwp9CgpkaXYuY3VzdG9tZXItdGFibGUgZGl2LnN1cGVyYWRtaW4tcm93IHsKICBiYWNrZ3JvdW5kOiAjZmZmZjAwOwp9CgpzZWxlY3QgewogIG1hcmdpbi10b3A6IDEwcHg7Cn0Kb3B0aW9uIHsKICBtYXJnaW4tbGVmdDogMTBweDsKfQoKLnNlbGVjdC1sb2NhdGlvbnMgewogIHdpZHRoOiA2MCU7Cn0KCi5jdXN0b21lci1oZWFkZXItcm93IHsKICB3aWR0aDogY2FsYygxMDAlIC0gMjBweCk7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgcGFkZGluZzogMTBweDsKICBib3JkZXItdG9wOiAxcHggc29saWQgI2VmZWZlZjsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VmZWZlZjsKICBoZWlnaHQ6IDE0cHg7CiAgY29sb3I6ICM3NTc1NzU7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgIAogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC13cmFwOiBub3dyYXA7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgouY3VzdG9tZXItaGVhZGVyLXJvdyBkaXYsCi5jdXN0b21lci1yb3cgZGl2IHsKICBtYXJnaW46IGF1dG87Cn0KCi5jdXN0b21lci1yb3cgewogIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTsKICBjbGVhcjogYm90aDsKICBwYWRkaW5nOiAwcHggMTBweDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VmZWZlZjsKICBoZWlnaHQ6IGF1dG87CiAgZGlzcGxheTogZmxleDsKICBmbGV4LXdyYXA6IG5vd3JhcDsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTsKfQoKLmN1c3RvbWVyLXJvdyBkaXYgewogIHdpZHRoOiAxMDAlOwp9CgouY3VzdG9tZXItcm93Om50aC1jaGlsZChldmVuKSB7CiAgLyogYmFja2dyb3VuZDogI2VmZWZlZjsgKi8KfQoKLmN1c3RvbWVyLXJvdyBpbnB1dCB7CiAgZmxleDogMCAwIDEwMHB4OwogIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50Owp9CgouY3VzdG9tZXItcm93OmhvdmVyIHsKICBiYWNrZ3JvdW5kOiAjZGZkZmRmOwp9CgouY3VzdG9tZXItdGFibGUtY2VsbC1kZXRhaWxzIHsKICBmbGV4OiAwIDAgMTUwcHg7Cn0KCi5jdXN0b21lci10YWJsZS1jZWxsLTAgewogIHBhZGRpbmc6IDVweDsKICBmbGV4OiAwIDAgMTgwcHg7CiAgLyogY3Vyc29yOiBwb2ludGVyOyAqLwp9CgouY3VzdG9tZXItdGFibGUtY2VsbC0xIHsKICBwYWRkaW5nOiA1cHg7CiAgZmxleDogMCAwIDE4MHB4OwogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9CgouY3VzdG9tZXItdGFibGUtY2VsbC0yIHsKICBwYWRkaW5nOiA1cHg7CiAgZmxleDogMSAxIDE4MHB4OwogIC8qIGN1cnNvcjogcG9pbnRlcjsgKi8KfQouY3VzdG9tZXItdGFibGUtY2VsbC01IHsKICBwYWRkaW5nOiA1cHg7CiAgZmxleDogMSAxIDE4MHB4OwogIC8qIGN1cnNvcjogcG9pbnRlcjsgKi8KfQoKLmN1c3RvbWVyLXRhYmxlLWNlbGwtMyB7CiAgcGFkZGluZzogNXB4OwogIGZsZXg6IDIgMiAxODBweDsKfQoKLmN1c3RvbWVyLXRhYmxlLWNlbGwtNCB7CiAgcGFkZGluZzogNXB4OwogIGZsZXg6IDAgMCAxMDBweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi5jdXN0b21lci10YWJsZS1jZWxsLTQgc3BhbiB7CiAgbWFyZ2luLXJpZ2h0OiA1cHg7CiAgY3Vyc29yOiBwb2ludGVyOwp9CgoubW9kYWwtaGVhZGVyIGgzIHNwYW4gewogIGZvbnQtc2l6ZTogMTRweDsKICBmbG9hdDogcmlnaHQ7CiAgbWFyZ2luLXJpZ2h0OiA1MHB4Owp9CgoubW9kYWwtZm9vdGVyIHsKICBjbGVhcjogYm90aDsKICB0ZXh0LWFsaWduOiByaWdodDsKICBtYXJnaW4tdG9wOiAyMHB4OwogIG1hcmdpbi1yaWdodDogMjBweDsKfQoKLm1vZGFsLWZvb3RlciAuZWwtYnV0dG9uIHsKICB3aWR0aDogMTcwcHg7Cn0KCi5kaWFsb2d1ZS10aXRsZSB7CiAgZm9udC1zaXplOiAyMnB4Owp9CgouZmlsZS1uYW1lIHsKICBmb250LXNpemU6IDE0cHg7CiAgZm9udC1zdHlsZTogaXRhbGljOwp9CgoubW9kYWwtZGVmYXVsdC1idXR0b24gewogIGN1cnNvcjogcG9pbnRlcjsKfQoKLmlucHV0cyB7CiAgd2lkdGg6IDEyNXB4Owp9CgpvcHRpb24gewogIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplOwp9Cgouc2Vjb25kYXJ5IHsKICBmb250LXdlaWdodDogNTAwOwogIG1hcmdpbjogMCA1MHB4Owp9Cgo="},{"version":3,"sources":["CSVOld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2VA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CSVOld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <transition name=\"modal\">\n    <el-dialog class=\"preview-container\" :visible.sync=\"csvOpen\" :before-close=\"closeModal\" :show-close=\"false\" width=\"calc(75% - 100px)\" top=\"6.25vh\">    \n      <span class=\"dialogue-title\" slot=\"title\">Upload Preview of <span class=\"file-name\"> {{fileName}} </span></span>\n      <div class=\"select-group-container\">        \n        <div class=\"select-group-option\">\n        <label>Select Location: </label>\n          <el-select v-model=\"customer.locationId\" maxHeight=\"120px\" clearable filterable placeholder=\"Select\" @change=\"getLocationTemplates()\">\n            <el-option v-for=\"location in locationOptions\" :label=\"location.name\" :value=\"location.locationId\" :key=\"location.locationId\" >\n            </el-option>\n          </el-select>\n        </div>\n        <div class=\"select-group-option\" v-if=\"customer.locationId\">\n          <label>Message Template: </label>\n          <el-select v-model=\"customer.template\" >\n            <el-option v-for=\"(template, index) in templateOptions\" :key=\"index\" :label=\"template.name\" :value=\"template.campaignId\"></el-option>\n            <!-- <el-option v-if=\"customer.location\" :value=\"customer.location\">{{customer.location}}</el-option> -->\n          </el-select>\n        </div>\n      \n        <div class=\"select-group-option\">\n          <label>Customer Status: </label>\n          <el-select v-model=\"customer.status\" >\n            <el-option v-for=\"option in statusOptions\" :label=\"option.label\" :value=\"option.value\" :key=\"option.value\">                \n            </el-option>\n          </el-select>\n        </div>\n        <div class=\"select-group-option\">\n          <label>Customer Country: </label>\n          <el-select v-model=\"customer.country\" >\n            <el-option v-for=\"option in countryOptions\" :label=\"option.country\" :value=\"option.code\" :key=\"option.country\">\n              {{option.country}}\n            </el-option>\n          </el-select>\n        </div>\n      </div>\n      <el-divider></el-divider>\n      <div class=\"customer-table\">\n        <div class=\"customer-header-row\">\n          <div class=\"customer-table-cell-0\">\n            <span>First Name</span>\n          </div>\n          <div class=\"customer-table-cell-1\">\n            <span>Last Name</span>\n          </div>\n          <div class=\"customer-table-cell-2\">\n            <span>Phone Number</span>\n          </div>\n          <div class=\"customer-table-cell-2\">\n            <span>Email</span>\n          </div>\n          <div class=\"customer-table-cell-3\">\n            <span>Notes</span>\n          </div>\n        </div>\n        <div class=\"customer-row\">\n          <div class=\"customer-table-cell-0\">\n            <el-select size=\"mini\" v-model=\"customerHeader.firstName\" @change=\"onHeaderChange('index1', 'firstName')\">\n              <el-option v-for=\"(header1) in headers\" :value=\"header1\" :key=\"header1\">{{header1}}</el-option>\n            </el-select>\n          </div>\n          <div class=\"customer-table-cell-1\">\n            <el-select size=\"mini\" v-model=\"customerHeader.lastName\" @change=\"onHeaderChange('index2', 'lastName')\">\n              <el-option v-for=\"(header2) in headers\" :value=\"header2\" :key=\"header2\">{{header2}}</el-option>\n            </el-select>\n          </div>\n          <div class=\"customer-table-cell-2\">\n            <el-select size=\"mini\" v-model=\"customerHeader.phone\" @change=\"onHeaderChange('index3', 'phone')\">\n              <el-option v-for=\"(header3) in headers\" :value=\"header3\" :key=\"header3\">{{header3}}</el-option>\n            </el-select>\n          </div>\n          <div class=\"customer-table-cell-2\">\n            <el-select size=\"mini\" v-model=\"customerHeader.email\" @change=\"onHeaderChange('index4', 'email')\">\n              <el-option v-for=\"(header4) in headers\" :value=\"header4\" :key=\"header4\">{{header4}}</el-option>\n            </el-select>\n          </div>\n          <div class=\"customer-table-cell-3\">\n            <el-select size=\"mini\" v-model=\"customerHeader.notes\" @change=\"onHeaderChange('index5', 'notes')\">\n              <el-option v-for=\"(header5) in headers\" :value=\"header5\" :key=\"header5\">{{header5}}</el-option>\n            </el-select>\n          </div>\n        </div>\n        <div class=\"customer-row quick-transition\" v-for=\"(customer, csvindex) in csvData\" :key=\"csvindex\" >\n          <el-input size=\"mini\" class=\"customer-table-cell-0 inputs\" v-model=\"customer[index1]\" :disabled=\"customerHeader.firstName == 'Leave Blank'\" ></el-input>\n          <el-input size=\"mini\" class=\"customer-table-cell-1 inputs\" v-model=\"customer[index2]\" :disabled=\"customerHeader.lastName == 'Leave Blank'\" ></el-input>\n          <el-input size=\"mini\" class=\"customer-table-cell-2 inputs\" v-model=\"customer[index3]\" :disabled=\"customerHeader.phone == 'Leave Blank'\" ></el-input>\n          <el-input size=\"mini\" class=\"customer-table-cell-5 inputs\" v-model=\"customer[index4]\" :disabled=\"customerHeader.email == 'Leave Blank'\" ></el-input>\n          <el-input size=\"mini\" class=\"customer-table-cell-3 inputs\" v-model=\"customer[index5]\" :disabled=\"customerHeader.notes == 'Leave Blank' || !customerHeader.notes\" ></el-input>\n        </div>\n      </div>\n      <div class=\"modal-footer text-right\">\n        <span class=\"secondary clickable\"  @click=\"closeModal()\">\n          Cancel\n        </span>\n        <el-button type=\"primary\"  @click=\"addCustomers()\" :disabled=\"!ready && customer.locationId\">\n          Accept\n        </el-button>\n      </div>\n    </el-dialog>\n  </transition>\n</template>\n<script>\nimport CustomerService from \"./../services/CustomerService\";\nimport CampaignService from \"./../services/CampaignService\";\nimport UserService from \"./../services/UserService\";\nimport { EventService } from \"../main\";\nimport vSelect from \"../../node_modules/vue-select/src/components/Select.vue\";\nimport UploadService from '../services/UploadService';\n\nexport default {\n  name: \"csvPreview\",\n  props: [\"rawData\", \"fileName\"],\n  components: {\n    vSelect\n  },\n  data: function() {\n    return {\n      csv: [],\n      customer: {\n        country: \"+1\",\n        template: \"\",\n        status: \"active\",\n        locationId: '',\n      },\n      csvOpen: true,\n      locationOptions: [],\n      customersList: [],\n      ready: false,\n      csvData: [],\n      statusOptions: [\n       { label: 'Subscribed', value: \"active\"}, \n       { label: 'Unsubscribed', value: \"inactive\"}\n      ],\n      templateOptions: [\"default\", \"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n      countryOptions: [\n        {country: 'USA / Canada', code: '+1'},\n        {country: 'Phillipines', code: '+63'},\n        {country: 'UAE', code: '+971'},\n        {country: 'Australia', code: '+61'}\n      ],\n      invalidRecords: 0,\n      headers: [],\n      customerHeader: [\"firstName\", \"lastName\", \"phone\", \"email\", \"notes\"],\n      index1: 0,\n      index2: 1,\n      index3: 2,\n      index4: 3,\n      index5: 4,\n      updatedOnce: false\n    };\n  },\n  created() {\n    this.selectedLocation = localStorage.getItem(\"locationId\");\n    this.locationOptions = JSON.parse(localStorage.getItem('locationOptions'));\n    // this.getLocationOptions();\n  },\n\n  computed: {\n    isReady() {\n      if (this.rawData.length > 0) {\n        this.csvData = this.rawData;\n      }\n      if (this.csvData && this.csvData.length == this.rawData.length) {\n        if (this.headers.length < 1) {\n          this.headers = this.csvData.shift();\n        }\n        if (this.headers) {\n          this.mapHeaders();\n          this.mapData();\n          this.updatedOnce = true;\n        }\n        this.ready = true;\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  watch: {\n    isReady(n) {\n      if (n == true) {\n        // console.log(n);\n        null;\n      }\n    }\n  },\n  methods: {\n    removeDuplicates(list) {\n      let vm = this;\n      // Removes \"undefined\" customers prior to scrubbing against the csv itself.\n      let initialScrubList = list.filter(e => e);\n      // Reduce to a new array\n      let filteredArr = initialScrubList.reduce((acc, current) => {\n        // As long as the current customer record has either phone number or email, proceed to check it for dupes, otherwise move on with the current accumulator.\n        if(current.phone || current.email) {\n          // Find whether any customers in the list up to this point have either the same email, or it's blank, or the same for phone number.\n          let found = acc.find(customer => { return (customer.email == current.email && current.email != '') || (customer.phone == current.phone && current.phone != '') })\n          // If there isn't anything found for either email or phone bumber, add it to the list, unless phone exists and isn't 10 digits.\n          if(!found && ( current.phone == '' || current.phone.length == 10 )) {\n            return acc.concat([current]);\n          } else {\n            return acc\n          }\n        } else {\n          return acc;\n        }\n      }, [])\n      return filteredArr;\n    },\n    mapHeaders() {\n      if(this.headers[0]) this.customerHeader.firstName = this.headers[0].trim();\n      if(this.headers[1]) this.customerHeader.lastName = this.headers[1].trim();\n      if(this.headers[2]) this.customerHeader.phone = this.headers[2].trim();\n      if(this.headers[3]) this.customerHeader.email = this.headers[3].trim();\n      if(this.headers[4]) this.customerHeader.notes = this.headers[4].trim();\n      if (!this.updatedOnce) {\n        this.headers.push(\"Leave Blank\");\n      }\n    },\n    mapData() {\n      this.csvData.map((e, i) => {\n        e.map((h, j) => {\n          h = h.trim();\n        });\n      });\n    },\n    getLocationOptions() {\n      let vm = this;\n      if (!vm.customer.location) {\n        if (vm.selectedLocation) {\n          vm.locationOptions.map((e, i) => {\n            if (e.value == vm.selectedLocation) {\n              vm.customer.locationId = e;\n            }\n          });\n        }\n      }\n    },\n    getLocationTemplates() {\n      let vm = this;\n      CampaignService.getCampaignsByLocation(vm.customer.locationId).then(response => {        \n        vm.templateOptions = response.result;\n      })\n    },\n    onHeaderChange(indexName, value) {\n      this[indexName] = this.headers.indexOf(this.customerHeader[value]);\n    },\n    addCustomers() {\n      let vm = this;\n      if (vm.ready == true) {\n        let addingCustomersList = vm.csvData.map((e, i) => {\n          let cust = {};\n          if ( e[vm.index3] || e[vm.index4]) {\n            e[vm.index1] ? cust.firstName = e[vm.index1].trim() : cust.firstName = e[vm.index1];\n            e[vm.index2] ? cust.lastName = e[vm.index2].trim() : cust.lastName = e[vm.index2];\n            e[vm.index3] ? e[vm.index3].charAt(0) == 1 ? cust.phone = e[vm.index3].substr(1).replace(/\\D/g, \"\") : cust.phone = e[vm.index3].replace(/\\D/g, \"\") : cust.phone = e[vm.index3];\n            e[vm.index4] ? cust.email = e[vm.index4].replace(/\\s/g, \"\").toLowerCase() : cust.email = e[vm.index4];\n            e[vm.index5] ? cust.notes = e[vm.index5].trim : cust.notes = '';\n            cust.country = this.customer.country;\n            return cust\n          } else {\n            console.log('Invalid Customer Record - must include either email or phone number');\n          }\n        });\n        // Removes \"undefined\" customers prior to scrubbing against the csv itself.\n        vm.customersList = vm.customersList.filter(e => e);\n        vm.customersList = this.removeDuplicates(vm.customersList, \"email\");\n        vm.customersList = this.removeDuplicates(vm.customersList, \"phone\");\n        vm.customersList.map((e, i) => {\n          if (e.phone.length > 0) {\n            if (e.phone.length !== 10) {\n              console.log(\"Invalid Record or Duplicate\", e);\n              vm.invalidRecords++;\n            }\n          }\n        });\n        \n        // Below now takes care of duplicates by phone or email in a single step, as well as length of phone number or whether they have an email instead.\n        addingCustomersList = this.removeDuplicates(addingCustomersList);\n        \n        // console.log(addingCustomersList);\n        \n        EventService.$emit(\"loading\", \"show\");\n        this.saveCustomer(\n          vm.customer.locationId,\n          vm.customer.template,\n          vm.customer.status,\n          addingCustomersList\n        ).then((response, error) => {\n          if(response) {\n            // console.log(response);          \n          } else if(error) {\n            console.log(error);            \n          }\n        })\n      }\n    },\n    saveCustomer(id, template, status, data) {\n      EventService.$emit(\"loading\", \"show\");\n      let vm = this;\n      let record = {\n        recordName: vm.fileName,\n        fileSize: data.length || 'Unknown',\n        locationId: id,\n        status: 'Uploaded'\n      }\n      return new Promise(function(resolve, reject) {\n        if (data.length === 0) {\n          resolve('done!');\n          EventService.$emit(\"warningMessage\", \"No records were found to add after removing duplicates.\");\n          EventService.$emit(\"loading\", \"hide\");\n          UploadService.saveUploadRecord(id, record);\n          vm.closeModal();\n        } else {\n          var newCustomers = data.splice(0, 100);\n          CustomerService.saveManyCustomers(id, template, status, newCustomers).then(function() {\n            vm.saveCustomer(id, template, status, data).then(function() {\n              resolve();\n              EventService.$emit('sucessMessage', \"Customers have been added.\")\n            }, function(error) {\n              reject();\n              EventService.$emit('errorMessage', \"Sorry, something went wrong. Please try again.\")\n              vm.closeModal();\n            });\n          }, function(error) {\n            reject();\n            EventService.$emit('errorMessage', \"Sorry, something went wrong. Please try again.\")\n            vm.closeModal();\n          });\n        }\n      })\n    },\n    closeModal() {\n      this.$emit(\"closeModal\");\n      this.csv = [];\n      this.csvData = [];\n      this.customer = {};\n      this.locationOptions = [];\n      this.customersList = [];\n      this.csvOpen = false;\n    }\n  }\n};\n</script>\n\n<style scoped>\n\n.select-group-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n}\n\n.select-group-option {\n  display: flex;\n  flex-direction: column;\n}\n\n.select-group-option label {\n  font-size: 11px;\n  margin-bottom: 5px;\n  color: #9a9a9a;\n}\n\n.capitalize {\n  text-transform: capitalize;\n}\n\n\n.customer-table {\n  background: white;\n  font-size: 14px;\n  padding: 10px;\n  clear: both;\n  overflow-y: scroll;\n  height: 50vh;\n}\n\ndiv.customer-table div.superadmin-row {\n  background: #ffff00;\n}\n\nselect {\n  margin-top: 10px;\n}\noption {\n  margin-left: 10px;\n}\n\n.select-locations {\n  width: 60%;\n}\n\n.customer-header-row {\n  width: calc(100% - 20px);\n  font-weight: bold;\n  padding: 10px;\n  border-top: 1px solid #efefef;\n  border-bottom: 1px solid #efefef;\n  height: 14px;\n  color: #757575;\n  text-transform: uppercase;  \n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n  cursor: pointer;\n}\n\n.customer-header-row div,\n.customer-row div {\n  margin: auto;\n}\n\n.customer-row {\n  width: calc(100% - 20px);\n  clear: both;\n  padding: 0px 10px;\n  border-bottom: 1px solid #efefef;\n  height: auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-evenly;\n}\n\n.customer-row div {\n  width: 100%;\n}\n\n.customer-row:nth-child(even) {\n  /* background: #efefef; */\n}\n\n.customer-row input {\n  flex: 0 0 100px;\n  background: transparent;\n}\n\n.customer-row:hover {\n  background: #dfdfdf;\n}\n\n.customer-table-cell-details {\n  flex: 0 0 150px;\n}\n\n.customer-table-cell-0 {\n  padding: 5px;\n  flex: 0 0 180px;\n  /* cursor: pointer; */\n}\n\n.customer-table-cell-1 {\n  padding: 5px;\n  flex: 0 0 180px;\n  text-transform: capitalize;\n}\n\n.customer-table-cell-2 {\n  padding: 5px;\n  flex: 1 1 180px;\n  /* cursor: pointer; */\n}\n.customer-table-cell-5 {\n  padding: 5px;\n  flex: 1 1 180px;\n  /* cursor: pointer; */\n}\n\n.customer-table-cell-3 {\n  padding: 5px;\n  flex: 2 2 180px;\n}\n\n.customer-table-cell-4 {\n  padding: 5px;\n  flex: 0 0 100px;\n  text-align: center;\n}\n\n.customer-table-cell-4 span {\n  margin-right: 5px;\n  cursor: pointer;\n}\n\n.modal-header h3 span {\n  font-size: 14px;\n  float: right;\n  margin-right: 50px;\n}\n\n.modal-footer {\n  clear: both;\n  text-align: right;\n  margin-top: 20px;\n  margin-right: 20px;\n}\n\n.modal-footer .el-button {\n  width: 170px;\n}\n\n.dialogue-title {\n  font-size: 22px;\n}\n\n.file-name {\n  font-size: 14px;\n  font-style: italic;\n}\n\n.modal-default-button {\n  cursor: pointer;\n}\n\n.inputs {\n  width: 125px;\n}\n\noption {\n  text-transform: capitalize;\n}\n\n.secondary {\n  font-weight: 500;\n  margin: 0 50px;\n}\n\n</style>\n"]}]}