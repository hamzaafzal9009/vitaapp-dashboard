{"remainingRequest":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/LoyaltyList.vue?vue&type=template&id=5a62f204&scoped=true&","dependencies":[{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/LoyaltyList.vue","mtime":1581270622000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}