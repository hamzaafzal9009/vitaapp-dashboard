{"remainingRequest":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/components/Reports/ReviewsByYearReport.vue?vue&type=template&id=2fcd7353&scoped=true&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/components/Reports/ReviewsByYearReport.vue","mtime":1581270622000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgaWQ9InJldmlld3MtYnktc291cmNlLXJlcG9ydC13cmFwcGVyIj4KICA8IS0tIDxkaXYgaWQ9InJlcG9ydC1oZWFkZXIiPgogICAgPGRpdiBpZD0icmVwb3J0LW5hbWUtd3JhcHBlciI+CiAgICAgIFJldmlld3MgYnkgWWVhcgogICAgPC9kaXY+CiAgICA8ZGl2IGlkPSJyZXBvcnQtb3B0aW9ucy13cmFwcGVyIj4KICAgICAgPGxhYmVsPlNlbGVjdGVkIFllYXI8L2xhYmVsPgogICAgICA8c2VsZWN0IHYtbW9kZWw9InNlbGVjdGVkWWVhciIgQGNoYW5nZT0iZ2V0UmV2aWV3c0RhdGEoKSI+CiAgICAgICAgPG9wdGlvbiA6dmFsdWU9Im9wdGlvbiIgdi1mb3I9Im9wdGlvbiBpbiB5ZWFyT3B0aW9ucyI+e3tvcHRpb259fTwvb3B0aW9uPgogICAgICA8L3NlbGVjdD4KICAgIDwvZGl2PgogIDwvZGl2PiAtLT4KICA8ZGl2IGlkPSJyZXBvcnQtaGVhZGVyIiBjbGFzcz0iYm94LXNoYWRvdyI+CiAgICA8ZGl2IGlkPSJyZXBvcnQtbmFtZS13cmFwcGVyIj4KICAgICAgUmV2aWV3cyBieSBZZWFyCiAgICA8L2Rpdj4KICAgIDxkaXYgaWQ9InJlcG9ydC1vcHRpb25zLXdyYXBwZXIiPgogICAgICA8ZWwtZGF0ZS1waWNrZXIKICAgICAgICB2LW1vZGVsPSJzZWxlY3RlZFllYXIiCiAgICAgICAgQGlucHV0PSJnZXRSZXZpZXdzRGF0YSIKICAgICAgICB0eXBlPSJ5ZWFyIgogICAgICAgIHBsYWNlaG9sZGVyPSJTZWxlY3QgeWVhciIKICAgICAgICB2YWx1ZS1mb3JtYXQ9Inl5eXkiIC8+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGlkPSJyZXBvcnQtYm9keSI+CiAgICA8ZGl2IHYtaWY9InJldmlld0RhdGEgJiYgcmV2aWV3RGF0YS5sZW5ndGgiIGNsYXNzPSJjYXJkLXdyYXBwZXIiPgogICAgICA8IS0tIDxkaXYgY2xhc3M9InJlcG9ydC1kYXRhIiB2LWZvcj0iZGF0YSBpbiByZXZpZXdEYXRhIj4KICAgICAgICA8c3BhbiBjbGFzcz0nc291cmNlLW5hbWUtaWNvbic+CiAgICAgICAgICA8aW1nIDpzcmM9ImdldEljb25Gb3JTb3VyY2UoZGF0YVswXS5zb3VyY2UpIiBoZWlnaHQ9IjMwIiBzdHlsZT0icGFkZGluZzogMCAxMHB4IDAgNXB4OyIvPiB7e2RhdGFbMF0uc291cmNlfX0KICAgICAgICA8L3NwYW4+CiAgICAgICAgPGRpdiBjbGFzcz0ibGFiZWxzIj4KICAgICAgICAgIDxzcGFuPlRvdGFsIFJldmlld3M8L3NwYW4+CiAgICAgICAgICA8c3Bhbj5OZXcgUmV2aWV3czwvc3Bhbj4KICAgICAgICAgIDxzcGFuPk1vbnRobHkgUmF0aW5nPC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InJlcG9ydC1ib3giIHYtZm9yPSIoZGF0YXAsIGkpIGluIGRhdGEiPgogICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgIHt7ZGF0YXAubW9udGguc3Vic3RyKDAsMyl9fQogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNwYW4gdi1pZj0iZGF0YVswXS5zb3VyY2UgPT0gJ2dvb2dsZSciPgogICAgICAgICAgICB7e2RhdGFwLmNvdW50ICsgZ2V0UHJpb3JBbW91bnRzKGksIGRhdGEpICsgcHJpb3JHb29nbGVEYXRhLnByaW9yUmV2aWV3c319CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRhWzBdLnNvdXJjZSA9PSAnZmFjZWJvb2snIj4KICAgICAgICAgICAge3tkYXRhcC5jb3VudCArIGdldFByaW9yQW1vdW50cyhpLCBkYXRhKSArIHByaW9yRmFjZWJvb2tEYXRhLnByaW9yUmV2aWV3c319CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRhWzBdLnNvdXJjZSA9PSAneWVscCciPgogICAgICAgICAgICB7e2RhdGFwLmNvdW50ICsgZ2V0UHJpb3JBbW91bnRzKGksIGRhdGEpICsgcHJpb3JZZWxwRGF0YS5wcmlvclJldmlld3N9fQogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNwYW4gdi1pZj0iZGF0YVswXS5zb3VyY2UgPT0gJ29waW5paW9uJyI+CiAgICAgICAgICAgIHt7ZGF0YXAuY291bnQgKyBnZXRQcmlvckFtb3VudHMoaSwgZGF0YSkgKyBwcmlvck9waW5paW9uRGF0YS5wcmlvclJldmlld3N9fQogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNwYW4+CiAgICAgICAgICB7e2NoZWNrRm9yRGF0ZShkYXRhcCl9fQogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNwYW4gdi1pZj0iIWlzTmFOKGRhdGFwLmF2ZXJhZ2VSYXRpbmcpIj4KICAgICAgICAgIHt7ZGF0YXAuYXZlcmFnZVJhdGluZ319CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiB2LWVsc2U+CiAgICAgICAgICAgIC0KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICA8L2Rpdj4gICAgICAgICAKICAgICAgPC9kaXY+IC0tPgogICAgICA8ZGl2IGNsYXNzPSJjYXJkLVJiWSAiIHYtZm9yPSIoZGF0YSwgZGF0YUluZGV4KSBpbiByZXZpZXdEYXRhIiA6a2V5PSJkYXRhSW5kZXgiPgogICAgICAgICAgICA8ZWwtY2FyZCAgY2xhc3M9ImJveC1jYXJkIj4KICAgICAgICAgICAgICAgIDxlbC1yb3c+CiAgICAgICAgICAgICAgICAgIDxlbC1jb2wgOnNwYW49IjI0Ij4KICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJjYXJkSWNvbnMiIDpzcmM9ImdldEljb25Gb3JTb3VyY2UoZGF0YVswXS5zb3VyY2UpIiBhbHQ9IkxvZ28iPiA8cCAgY2xhc3M9ImNhcmRUaXRsZSI+e3tkYXRhWzBdLnNvdXJjZX19PC9wPgogICAgICAgICAgICAgICAgICA8L2VsLWNvbD4KICAgICAgICAgICAgICAgICAgPCEtLSA8ZWwtY29sIDpzcGFuPSI1Ij4KICAgICAgICAgICAgICAgICAgICA8ZWwtc2VsZWN0IHBsYWNlaG9sZGVyPSJMYXN0IDEyIE1vbnRocyI+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgIDwvZWwtY29sPiAtLT4KICAgICAgICAgICAgICAgIDwvZWwtcm93PgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGVsLXJvdyA6Z3V0dGVyPSIyMCI+CiAgICAgICAgICAgICAgICAgIDxlbC1jb2wgOnNwYW49IjQiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImxhYmVscyI+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Ub3RhbCBSZXZpZXdzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+TmV3IFJldmlld3M8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Nb250aGx5IFJhdGluZzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9lbC1jb2w+CiAgICAgICAgICAgICAgICAgIDxlbC1jb2wgOnNwYW49IjE4IiBjbGFzcz0icmVwb3J0LWJveC13cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IDpjbGFzcz0iWydyZXBvcnQtYm94JywgeydjdXJyZW50LW1vbnRoJzogZGF0YXAubW9udGguc3Vic3RyKDAsMykgPT0gY3VycmVudE1vbnRofV0iIHYtZm9yPSIoZGF0YXAsIGkpIGluIGRhdGEiIDprZXk9ImkiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ZGF0YXAubW9udGguc3Vic3RyKDAsMyl9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iZGF0YVswXS5zb3VyY2UgPT0gJ2dvb2dsZSciPgogICAgICAgICAgICAgICAgICAgICAgICB7e2RhdGFwLmNvdW50ICsgZ2V0UHJpb3JBbW91bnRzKGksIGRhdGEpICsgcHJpb3JHb29nbGVEYXRhLnByaW9yUmV2aWV3c319CiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRhWzBdLnNvdXJjZSA9PSAnZmFjZWJvb2snIj4KICAgICAgICAgICAgICAgICAgICAgICAge3tkYXRhcC5jb3VudCArIGdldFByaW9yQW1vdW50cyhpLCBkYXRhKSArIHByaW9yRmFjZWJvb2tEYXRhLnByaW9yUmV2aWV3c319CiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJkYXRhWzBdLnNvdXJjZSA9PSAneWVscCciPgogICAgICAgICAgICAgICAgICAgICAgICB7e2RhdGFwLmNvdW50ICsgZ2V0UHJpb3JBbW91bnRzKGksIGRhdGEpICsgcHJpb3JZZWxwRGF0YS5wcmlvclJldmlld3N9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iZGF0YVswXS5zb3VyY2UgPT0gJ29waW5paW9uJyI+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7ZGF0YXAuY291bnQgKyBnZXRQcmlvckFtb3VudHMoaSwgZGF0YSkgKyBwcmlvck9waW5paW9uRGF0YS5wcmlvclJldmlld3N9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAgICAgICAgICB7e2NoZWNrRm9yRGF0ZShkYXRhcCl9fQogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0iIWlzTmFOKGRhdGFwLmF2ZXJhZ2VSYXRpbmcpIj4KICAgICAgICAgICAgICAgICAgICAgIHt7ZGF0YXAuYXZlcmFnZVJhdGluZ319CiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+CiAgICAgICAgICAgICAgICAgICAgICAgIC0KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAKICAgICAgICAgICAgICAgICAgPC9lbC1jb2w+CiAgICAgICAgICAgICAgICA8L2VsLXJvdz4KICAgICAgICAgICAgICAgIDwhLS0gPGVsLWRpdmlkZXI+PC9lbC1kaXZpZGVyPiAtLT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmRGb290ZXIiPgogICAgICAgICAgICAgPCEtLSA8aSBjbGFzcz0iZWwtaWNvbi1yZWZyZXNoIj48L2k+IFVwZGF0ZWQgaW4gdGhlIGxhc3QgaG91ciAtLT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZWwtY2FyZD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgdi1pZj0iIXJldmlld0RhdGEgfHwgIXJldmlld0RhdGEubGVuZ3RoIiBjbGFzcz0ibm8tZGF0YSI+CiAgICAgIE5vIGRhdGEgZm91bmQgZm9yIHNlbGVjdGVkIHllYXIuCiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+Cg=="},null]}