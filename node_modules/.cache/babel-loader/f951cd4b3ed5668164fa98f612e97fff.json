{"remainingRequest":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/babel-loader/lib/index.js!/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/services/ParsingService.js","dependencies":[{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/services/ParsingService.js","mtime":1581270622000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/package.json","mtime":1587799327166},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGh0dHAgZnJvbSAiLi9odHRwLWNvbW1vbiI7CmV4cG9ydCBkZWZhdWx0IHsKICBwYXJzZVhMU1g6IGZ1bmN0aW9uIHBhcnNlWExTWChmaWxlKSB7CiAgICByZXR1cm4gaHR0cC5wb3N0KCcvcGFyc2luZy9wYXJzZVhMU1gnLCB7CiAgICAgIGZpbGU6IGZpbGUKICAgIH0pOwogIH0sCiAgc2F2ZVBhcnNpbmdSdWxlczogZnVuY3Rpb24gc2F2ZVBhcnNpbmdSdWxlcyhtYWlsYm94LCBwYXJzaW5nUnVsZXMsIHJ1bGVJZCkgewogICAgaWYgKHJ1bGVJZCkgewogICAgICByZXR1cm4gaHR0cC5wb3N0KCcvcGFyc2luZy91cGRhdGUnLCB7CiAgICAgICAgcnVsZUlkOiBydWxlSWQsCiAgICAgICAgbWFpbGJveDogbWFpbGJveCwKICAgICAgICBwYXJzaW5nUnVsZXM6IHBhcnNpbmdSdWxlcwogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBodHRwLnBvc3QoJy9wYXJzaW5nL2NyZWF0ZScsIHsKICAgICAgICBtYWlsYm94OiBtYWlsYm94LAogICAgICAgIHBhcnNpbmdSdWxlczogcGFyc2luZ1J1bGVzCiAgICAgIH0pOwogICAgfQogIH0sCiAgZ2V0UGFyc2luZ1J1bGVzOiBmdW5jdGlvbiBnZXRQYXJzaW5nUnVsZXMobWFpbGJveCkgewogICAgaWYgKG1haWxib3gpIHsKICAgICAgcmV0dXJuIGh0dHAuZ2V0KCcvcGFyc2luZy9tYWlsYm94LycgKyBtYWlsYm94KTsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiBodHRwLmdldCgnL3BhcnNpbmcvYWxsJyk7CiAgICB9CiAgfSwKICBnZXRQYXJzaW5nUnVsZTogZnVuY3Rpb24gZ2V0UGFyc2luZ1J1bGUocGFyc2VJZCkgewogICAgcmV0dXJuIGh0dHAuZ2V0KCcvcGFyc2luZy8nICsgcGFyc2VJZCk7CiAgfSwKICBnZXRTYW1wbGVNYWlsOiBmdW5jdGlvbiBnZXRTYW1wbGVNYWlsKCkgewogICAgcmV0dXJuIGh0dHAuZ2V0KCcvcGFyc2luZy9zYW1wbGVNYWlsJyk7CiAgfSwKICBjaGFuZ2VQYXJzaW5nUnVsZVN0YXR1czogZnVuY3Rpb24gY2hhbmdlUGFyc2luZ1J1bGVTdGF0dXMocGFyc2VJZCwgc3RhdHVzKSB7CiAgICByZXR1cm4gaHR0cC5wb3N0KCcvcGFyc2luZy9jaGFuZ2VTdGF0dXMnLCB7CiAgICAgIHBhcnNpbmdJZDogcGFyc2VJZCwKICAgICAgc3RhdHVzOiBzdGF0dXMKICAgIH0pOwogIH0sCiAgZ2V0UHJvY2Vzc2VkRW1haWxzOiBmdW5jdGlvbiBnZXRQcm9jZXNzZWRFbWFpbHMobWFpbGJveCkgewogICAgcmV0dXJuIGh0dHAuZ2V0KCcvcGFyc2luZy9wcm9jZXNzZWQvJyArIG1haWxib3gpOwogIH0KfTs="},{"version":3,"sources":["/Library/WebServer/Documents/Projects/OPINIION FINAL/opiniionv4/src/services/ParsingService.js"],"names":["http","parseXLSX","file","post","saveParsingRules","mailbox","parsingRules","ruleId","getParsingRules","get","getParsingRule","parseId","getSampleMail","changeParsingRuleStatus","status","parsingId","getProcessedEmails"],"mappings":"AAAA,OAAOA,IAAP;AAEA,eAAe;AACbC,EAAAA,SADa,qBACHC,IADG,EACG;AACd,WAAOF,IAAI,CAACG,IAAL,CAAU,oBAAV,EAAgC;AAACD,MAAAA,IAAI,EAAEA;AAAP,KAAhC,CAAP;AACD,GAHY;AAKbE,EAAAA,gBALa,4BAKIC,OALJ,EAKaC,YALb,EAK2BC,MAL3B,EAKmC;AAC9C,QAAIA,MAAJ,EAAY;AACV,aAAOP,IAAI,CAACG,IAAL,CAAU,iBAAV,EAA6B;AAACI,QAAAA,MAAM,EAAEA,MAAT;AAAiBF,QAAAA,OAAO,EAAEA,OAA1B;AAAmCC,QAAAA,YAAY,EAAEA;AAAjD,OAA7B,CAAP;AACD,KAFD,MAEO;AACL,aAAON,IAAI,CAACG,IAAL,CAAU,iBAAV,EAA6B;AAACE,QAAAA,OAAO,EAAEA,OAAV;AAAmBC,QAAAA,YAAY,EAAEA;AAAjC,OAA7B,CAAP;AACD;AACF,GAXY;AAabE,EAAAA,eAba,2BAaGH,OAbH,EAaY;AACvB,QAAGA,OAAH,EAAY;AACV,aAAOL,IAAI,CAACS,GAAL,CAAS,sBAAsBJ,OAA/B,CAAP;AACD,KAFD,MAEO;AACL,aAAOL,IAAI,CAACS,GAAL,CAAS,cAAT,CAAP;AACD;AACF,GAnBY;AAqBbC,EAAAA,cArBa,0BAqBEC,OArBF,EAqBW;AACtB,WAAOX,IAAI,CAACS,GAAL,CAAS,cAAcE,OAAvB,CAAP;AACD,GAvBY;AAyBbC,EAAAA,aAzBa,2BAyBG;AACd,WAAOZ,IAAI,CAACS,GAAL,CAAS,qBAAT,CAAP;AACD,GA3BY;AA6BbI,EAAAA,uBA7Ba,mCA6BWF,OA7BX,EA6BoBG,MA7BpB,EA6B4B;AACvC,WAAOd,IAAI,CAACG,IAAL,CAAU,uBAAV,EAAmC;AAACY,MAAAA,SAAS,EAAEJ,OAAZ;AAAqBG,MAAAA,MAAM,EAAEA;AAA7B,KAAnC,CAAP;AACD,GA/BY;AAiCbE,EAAAA,kBAjCa,8BAiCMX,OAjCN,EAiCe;AAC1B,WAAOL,IAAI,CAACS,GAAL,CAAS,wBAAwBJ,OAAjC,CAAP;AACD;AAnCY,CAAf","sourcesContent":["import http from './http-common'\n\nexport default {\n  parseXLSX(file) {\n    return http.post('/parsing/parseXLSX', {file: file})\n  },\n\n  saveParsingRules(mailbox, parsingRules, ruleId) {\n    if (ruleId) {\n      return http.post('/parsing/update', {ruleId: ruleId, mailbox: mailbox, parsingRules: parsingRules});\n    } else {\n      return http.post('/parsing/create', {mailbox: mailbox, parsingRules: parsingRules});\n    }\n  },\n\n  getParsingRules(mailbox) {\n    if(mailbox) {\n      return http.get('/parsing/mailbox/' + mailbox)\n    } else {\n      return http.get('/parsing/all');\n    }\n  },\n\n  getParsingRule(parseId) {\n    return http.get('/parsing/' + parseId)\n  },\n\n  getSampleMail() {\n    return http.get('/parsing/sampleMail');\n  },\n\n  changeParsingRuleStatus(parseId, status) {\n    return http.post('/parsing/changeStatus', {parsingId: parseId, status: status});\n  },\n\n  getProcessedEmails(mailbox) {\n    return http.get('/parsing/processed/' + mailbox);\n  }\n}"]}]}