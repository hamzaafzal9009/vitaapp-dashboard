{"remainingRequest":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/babel-loader/lib/index.js!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/Reports/OpenedEmailsModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/Reports/OpenedEmailsModal.vue","mtime":1581270622000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/package.json","mtime":1587799327166},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAudG8tc3RyaW5nIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFJlcG9ydFNlcnZpY2UgZnJvbSAiLi4vLi4vc2VydmljZXMvUmVwb3J0U2VydmljZSI7CmltcG9ydCB7IEV2ZW50U2VydmljZSB9IGZyb20gIi4uLy4uL21haW4iOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ29wZW5lZEVtYWlsc01vZGFsJywKICBwcm9wczogWydzdGFydERhdGUnLCAnZW5kRGF0ZScsICdyZXBvcnRUeXBlJ10sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1vZGFsT3BlbjogdHJ1ZSwKICAgICAgb3BlbmVkRGF0YTogW10sCiAgICAgIGNvdW50OiAwLAogICAgICBzZWxlY3RlZFBhZ2U6IDAKICAgIH07CiAgfSwKICBmaWx0ZXJzOiB7CiAgICBkYXRlQ29udmVyc2lvbjogZnVuY3Rpb24gZGF0ZUNvbnZlcnNpb24oZGF0ZSkgewogICAgICB2YXIgY29udmVydGVkRGF0ZSA9IGRhdGUgKyAxMDAwICogNjAgKiA2MCAqIDY7CiAgICAgIHZhciBkYXRlU3RyaW5nID0gbmV3IERhdGUoY29udmVydGVkRGF0ZSkudG9TdHJpbmcoKS5zdWJzdHIoNCwgMTEpOwogICAgICByZXR1cm4gZGF0ZVN0cmluZzsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldERhdGEoKTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwYXJzZURpYWxvZ1RpdGxlOiBmdW5jdGlvbiBwYXJzZURpYWxvZ1RpdGxlKHByb3BUeXBlKSB7CiAgICAgIHZhciB0eXBlID0gdGhpcy5yZXBvcnRUeXBlLnNwbGl0KCctJyk7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHR5cGUubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgZWxlbWVudCA9IHR5cGVbMF0uY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyB0eXBlWzBdLnNsaWNlKDEpICsgJyAnICsgdHlwZVsxXS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHR5cGVbMV0uc2xpY2UoMSk7CiAgICAgICAgcmV0dXJuIGVsZW1lbnQ7CiAgICAgIH0KICAgIH0sCiAgICB1cHBlckJvdW5kOiBmdW5jdGlvbiB1cHBlckJvdW5kKCkgewogICAgICByZXR1cm4gTWF0aC5jZWlsKHRoaXMuY291bnQgLyA1MCk7CiAgICB9LAogICAgcGFnaW5hdGlvbjogZnVuY3Rpb24gcGFnaW5hdGlvbigpIHsKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRQYWdlID4gNCAmJiB0aGlzLnNlbGVjdGVkUGFnZSA8IHRoaXMudXBwZXJCb3VuZCAtIDUgJiYgdGhpcy51cHBlckJvdW5kID4gMTApIHsKICAgICAgICByZXR1cm4gW3RoaXMuc2VsZWN0ZWRQYWdlIC0gNCwgdGhpcy5zZWxlY3RlZFBhZ2UgLSAzLCB0aGlzLnNlbGVjdGVkUGFnZSAtIDIsIHRoaXMuc2VsZWN0ZWRQYWdlIC0gMSwgdGhpcy5zZWxlY3RlZFBhZ2UsIHRoaXMuc2VsZWN0ZWRQYWdlICsgMSwgdGhpcy5zZWxlY3RlZFBhZ2UgKyAyLCB0aGlzLnNlbGVjdGVkUGFnZSArIDMsIHRoaXMuc2VsZWN0ZWRQYWdlICsgNCwgdGhpcy5zZWxlY3RlZFBhZ2UgKyA1XTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRQYWdlID49IHRoaXMudXBwZXJCb3VuZCAtIDYgJiYgdGhpcy51cHBlckJvdW5kID4gMTApIHsKICAgICAgICByZXR1cm4gW3RoaXMudXBwZXJCb3VuZCAtIDksIHRoaXMudXBwZXJCb3VuZCAtIDgsIHRoaXMudXBwZXJCb3VuZCAtIDcsIHRoaXMudXBwZXJCb3VuZCAtIDYsIHRoaXMudXBwZXJCb3VuZCAtIDUsIHRoaXMudXBwZXJCb3VuZCAtIDQsIHRoaXMudXBwZXJCb3VuZCAtIDMsIHRoaXMudXBwZXJCb3VuZCAtIDIsIHRoaXMudXBwZXJCb3VuZCAtIDEsIHRoaXMudXBwZXJCb3VuZF07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIE1hdGgubWluKDEwLCBNYXRoLmNlaWwodGhpcy5jb3VudCAvIDUwKSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEobnVtKSB7CiAgICAgIEV2ZW50U2VydmljZS4kZW1pdCgibG9hZGluZyIsICJzaG93Iik7CiAgICAgIHZhciBsb2NhdGlvbklkQXJyYXkgPSBbXTsKICAgICAgdmFyIGxvY2F0aW9uSWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnbG9jYXRpb25JZCcpOwoKICAgICAgaWYgKGxvY2F0aW9uSWQpIHsKICAgICAgICBsb2NhdGlvbklkQXJyYXkucHVzaChsb2NhdGlvbklkKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgbG9jT3B0aW9ucyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2xvY2F0aW9uT3B0aW9ucycpKTsKICAgICAgICBsb2NPcHRpb25zLm1hcChmdW5jdGlvbiAoZWwpIHsKICAgICAgICAgIHJldHVybiBsb2NhdGlvbklkQXJyYXkucHVzaChlbC5sb2NhdGlvbklkKTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdmFyIHNlbGVjdE51bSA9IDA7CgogICAgICBpZiAobnVtKSB7CiAgICAgICAgc2VsZWN0TnVtID0gbnVtOwogICAgICB9CgogICAgICB2YXIgdm0gPSB0aGlzOwoKICAgICAgaWYgKHZtLnJlcG9ydFR5cGUgPT0gJ2VtYWlsLW9wZW5lZCcpIHsKICAgICAgICBSZXBvcnRTZXJ2aWNlLmdldEVtYWlsT3BlbmVkRW5nYWdlbWVudChuZXcgRGF0ZSh2bS5zdGFydERhdGUpLmdldFRpbWUoKSwgbmV3IERhdGUodm0uZW5kRGF0ZSkuZ2V0VGltZSgpLCBsb2NhdGlvbklkQXJyYXksIHNlbGVjdE51bSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChyZXNwb25zZS5yZXN1bHQpIHZtLm9wZW5lZERhdGEgPSByZXNwb25zZS5yZXN1bHQ7CgogICAgICAgICAgaWYgKHJlc3BvbnNlLmNvdW50ICYmIHJlc3BvbnNlLmNvdW50WzBdKSB7CiAgICAgICAgICAgIHZtLmNvdW50ID0gcmVzcG9uc2UuY291bnRbMF0udG90YWxDb3VudDsKICAgICAgICAgIH0KCiAgICAgICAgICBFdmVudFNlcnZpY2UuJGVtaXQoImxvYWRpbmciLCAiaGlkZSIpOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgaWYgKHZtLnJlcG9ydFR5cGUgPT0gJ2VtYWlsLXJlcGxpZWQnKSB7CiAgICAgICAgUmVwb3J0U2VydmljZS5nZXRFbWFpbFJlcGxpZWRFbmdhZ2VtZW50KG5ldyBEYXRlKHZtLnN0YXJ0RGF0ZSkuZ2V0VGltZSgpLCBuZXcgRGF0ZSh2bS5lbmREYXRlKS5nZXRUaW1lKCksIGxvY2F0aW9uSWRBcnJheSwgc2VsZWN0TnVtKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLnJlc3VsdCkgdm0ub3BlbmVkRGF0YSA9IHJlc3BvbnNlLnJlc3VsdDsKCiAgICAgICAgICBpZiAocmVzcG9uc2UuY291bnQgJiYgcmVzcG9uc2UuY291bnRbMF0pIHsKICAgICAgICAgICAgdm0uY291bnQgPSByZXNwb25zZS5jb3VudFswXS50b3RhbENvdW50OwogICAgICAgICAgfQoKICAgICAgICAgIEV2ZW50U2VydmljZS4kZW1pdCgibG9hZGluZyIsICJoaWRlIik7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodm0ucmVwb3J0VHlwZSA9PSAnc21zLW9wZW5lZCcpIHsKICAgICAgICBSZXBvcnRTZXJ2aWNlLmdldFNtc09wZW5lZEVuZ2FnZW1lbnQobmV3IERhdGUodm0uc3RhcnREYXRlKS5nZXRUaW1lKCksIG5ldyBEYXRlKHZtLmVuZERhdGUpLmdldFRpbWUoKSwgbG9jYXRpb25JZEFycmF5LCBzZWxlY3ROdW0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBpZiAocmVzcG9uc2UucmVzdWx0KSB2bS5vcGVuZWREYXRhID0gcmVzcG9uc2UucmVzdWx0OwoKICAgICAgICAgIGlmIChyZXNwb25zZS5jb3VudCAmJiByZXNwb25zZS5jb3VudFswXSkgewogICAgICAgICAgICB2bS5jb3VudCA9IHJlc3BvbnNlLmNvdW50WzBdLnRvdGFsQ291bnQ7CiAgICAgICAgICB9CgogICAgICAgICAgRXZlbnRTZXJ2aWNlLiRlbWl0KCJsb2FkaW5nIiwgImhpZGUiKTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh2bS5yZXBvcnRUeXBlID09ICdzbXMtcmVwbGllZCcpIHsKICAgICAgICBSZXBvcnRTZXJ2aWNlLmdldFNtc1JlcGxpZWRFbmdhZ2VtZW50KG5ldyBEYXRlKHZtLnN0YXJ0RGF0ZSkuZ2V0VGltZSgpLCBuZXcgRGF0ZSh2bS5lbmREYXRlKS5nZXRUaW1lKCksIGxvY2F0aW9uSWRBcnJheSwgc2VsZWN0TnVtKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgaWYgKHJlc3BvbnNlLnJlc3VsdCkgdm0ub3BlbmVkRGF0YSA9IHJlc3BvbnNlLnJlc3VsdDsKCiAgICAgICAgICBpZiAocmVzcG9uc2UuY291bnQgJiYgcmVzcG9uc2UuY291bnRbMF0pIHsKICAgICAgICAgICAgdm0uY291bnQgPSByZXNwb25zZS5jb3VudFswXS50b3RhbENvdW50OwogICAgICAgICAgfQoKICAgICAgICAgIEV2ZW50U2VydmljZS4kZW1pdCgibG9hZGluZyIsICJoaWRlIik7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBzZXRQYWdlTnVtOiBmdW5jdGlvbiBzZXRQYWdlTnVtKHBhZ2VOdW0pIHsKICAgICAgaWYgKHBhZ2VOdW0gIT0gdGhpcy5zZWxlY3RlZFBhZ2UpIHsKICAgICAgICB0aGlzLnNlbGVjdGVkUGFnZSA9IHBhZ2VOdW07CiAgICAgICAgdGhpcy5nZXREYXRhKHBhZ2VOdW0pOwogICAgICB9CiAgICB9LAogICAgY2xvc2VNb2RhbDogZnVuY3Rpb24gY2xvc2VNb2RhbCgpIHsKICAgICAgdGhpcy4kZW1pdCgnY2xvc2VNb2RhbCcpOwogICAgICB0aGlzLm9wZW5lZERhdGEgPSBudWxsOwogICAgICB0aGlzLm1vZGFsT3BlbiA9IGZhbHNlOwogICAgICB0aGlzLnNlbGVjdGVkUGFnZSA9IDE7CiAgICAgIEV2ZW50U2VydmljZS4kZW1pdCgnbG9hZGluZycsICdoaWRlJyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["OpenedEmailsModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,OAAA,aAAA;AACA,SAAA,YAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA,CAAA,WAAA,EAAA,SAAA,EAAA,YAAA,CAFA;AAIA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,UAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,CAHA;AAIA,MAAA,YAAA,EAAA;AAJA,KAAA;AAMA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,0BACA,IADA,EACA;AACA,UAAA,aAAA,GAAA,IAAA,GAAA,OAAA,EAAA,GAAA,EAAA,GAAA,CAAA;AACA,UAAA,UAAA,GAAA,IAAA,IAAA,CAAA,aAAA,EAAA,QAAA,GAAA,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,aAAA,UAAA;AACA;AALA,GAZA;AAmBA,EAAA,OAnBA,qBAmBA;AACA,SAAA,OAAA;AACA,GArBA;AAsBA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,4BACA,QADA,EACA;AACA,UAAA,IAAA,GAAA,KAAA,UAAA,CAAA,KAAA,CAAA,GAAA,CAAA;;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,OAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,KAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,GAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,CAAA,EAAA,WAAA,EAAA,GAAA,IAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,eAAA,OAAA;AACA;AACA,KAPA;AAQA,IAAA,UARA,wBAQA;AACA,aAAA,IAAA,CAAA,IAAA,CAAA,KAAA,KAAA,GAAA,EAAA,CAAA;AACA,KAVA;AAWA,IAAA,UAXA,wBAWA;AACA,UAAA,KAAA,YAAA,GAAA,CAAA,IAAA,KAAA,YAAA,GAAA,KAAA,UAAA,GAAA,CAAA,IAAA,KAAA,UAAA,GAAA,EAAA,EAAA;AACA,eAAA,CAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,EAAA,KAAA,YAAA,GAAA,CAAA,CAAA;AACA;;AACA,UAAA,KAAA,YAAA,IAAA,KAAA,UAAA,GAAA,CAAA,IAAA,KAAA,UAAA,GAAA,EAAA,EAAA;AACA,eAAA,CAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,GAAA,CAAA,EAAA,KAAA,UAAA,CAAA;AACA,OAFA,MAGA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,EAAA,IAAA,CAAA,IAAA,CAAA,KAAA,KAAA,GAAA,EAAA,CAAA,CAAA;AACA;AACA;AArBA,GAtBA;AA6CA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,GADA,EACA;AACA,MAAA,YAAA,CAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA,UAAA,eAAA,GAAA,EAAA;AACA,UAAA,UAAA,GAAA,YAAA,CAAA,OAAA,CAAA,YAAA,CAAA;;AACA,UAAA,UAAA,EAAA;AACA,QAAA,eAAA,CAAA,IAAA,CAAA,UAAA;AACA,OAFA,MAEA;AACA,YAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,YAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;AACA,QAAA,UAAA,CAAA,GAAA,CAAA,UAAA,EAAA;AAAA,iBAAA,eAAA,CAAA,IAAA,CAAA,EAAA,CAAA,UAAA,CAAA;AAAA,SAAA;AACA;;AACA,UAAA,SAAA,GAAA,CAAA;;AACA,UAAA,GAAA,EAAA;AACA,QAAA,SAAA,GAAA,GAAA;AACA;;AACA,UAAA,EAAA,GAAA,IAAA;;AACA,UAAA,EAAA,CAAA,UAAA,IAAA,cAAA,EAAA;AACA,QAAA,aAAA,CAAA,wBAAA,CAAA,IAAA,IAAA,CAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,EAAA,eAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,MAAA,EAAA,EAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA;;AACA,cAAA,QAAA,CAAA,KAAA,IAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,EAAA,CAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA,SANA;AAOA,OARA,MAQA,IAAA,EAAA,CAAA,UAAA,IAAA,eAAA,EAAA;AACA,QAAA,aAAA,CAAA,yBAAA,CAAA,IAAA,IAAA,CAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,EAAA,eAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,MAAA,EAAA,EAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA;;AACA,cAAA,QAAA,CAAA,KAAA,IAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,EAAA,CAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA,SANA;AAOA,OARA,MAQA,IAAA,EAAA,CAAA,UAAA,IAAA,YAAA,EAAA;AACA,QAAA,aAAA,CAAA,sBAAA,CAAA,IAAA,IAAA,CAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,EAAA,eAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,MAAA,EAAA,EAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA;;AACA,cAAA,QAAA,CAAA,KAAA,IAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,EAAA,CAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA,SANA;AAOA,OARA,MAQA,IAAA,EAAA,CAAA,UAAA,IAAA,aAAA,EAAA;AACA,QAAA,aAAA,CAAA,uBAAA,CAAA,IAAA,IAAA,CAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,EAAA,IAAA,IAAA,CAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,EAAA,eAAA,EAAA,SAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,cAAA,QAAA,CAAA,MAAA,EAAA,EAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA;;AACA,cAAA,QAAA,CAAA,KAAA,IAAA,QAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA;AACA,YAAA,EAAA,CAAA,KAAA,GAAA,QAAA,CAAA,KAAA,CAAA,CAAA,EAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA,SANA;AAOA;AACA,KAjDA;AAkDA,IAAA,UAlDA,sBAkDA,OAlDA,EAkDA;AACA,UAAA,OAAA,IAAA,KAAA,YAAA,EAAA;AACA,aAAA,YAAA,GAAA,OAAA;AACA,aAAA,OAAA,CAAA,OAAA;AACA;AACA,KAvDA;AAwDA,IAAA,UAAA,EAAA,sBAAA;AACA,WAAA,KAAA,CAAA,YAAA;AACA,WAAA,UAAA,GAAA,IAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,WAAA,YAAA,GAAA,CAAA;AACA,MAAA,YAAA,CAAA,KAAA,CAAA,SAAA,EAAA,MAAA;AACA;AA9DA;AA7CA,CAAA","sourcesContent":["<template>\n  <el-dialog :title=\"parseDialogTitle\" width=\"900px\" center :show-close=\"true\" :before-close=\"closeModal\" :visible.sync=\"modalOpen\">\n    <el-table size=\"mini\" :data=\"openedData\" max-height=\"450px\">\n      <el-table-column prop=\"name\" sortable min-width=\"120\" label=\"Name\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.firstName + ' ' + scope.row.lastName}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"email\" sortable min-width=\"120\" label=\"Email\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.email}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"phone\" sortable min-width=\"120\" label=\"Phone\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.phone}}</span>\n        </template>\n      </el-table-column>\n      <!-- Conditionally rendered labels below -->\n      <el-table-column v-if=\"parseDialogTitle == 'Email Replied'\" prop=\"date\" sortable min-width=\"150\" label=\"Date Replied\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.text}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column v-else-if=\"parseDialogTitle == 'Email Engagement'\" sortable prop=\"date\" min-width=\"150\" label=\"Date Engaged\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.text}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column v-else-if=\"parseDialogTitle == 'Sms Engagement'\" sortable prop=\"date\" min-width=\"150\" label=\"Date Engaged\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.text}}</span>\n        </template>\n      </el-table-column>\n      <el-table-column v-else-if=\"parseDialogTitle == 'Sms Replied'\" sortable prop=\"date\" min-width=\"150\" label=\"Date Replied\">\n        <template slot-scope=\"scope\">\n          <span>{{scope.row.text}}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"dialog-footer\">\n      <div class=\"footer-count\">Total: {{count}}</div>\n    </div>\n    <!-- <span class=\"close\" title=\"Close\" @click=\"closeModal()\"><i class=\"fal fa-times\"></i></span> -->\n    <!-- <h4>{{reportType.split('-').join(' ')}}</h4> -->\n    <!-- <div class=\"modal-header\">\n      <span v-if=\"openedData && openedData.length\">Total: {{count}}</span>\n    </div> -->\n    <!-- <div class=\"modal-body\" :class=\"{'overflow': openedData.length > 10}\">\n      <div class=\"opened-data bordered\">\n        <span>Name</span>\n        <span>Phone</span>\n        <span>Email</span>\n        <span>Timestamp</span>\n      </div>\n      <div class=\"opened-data\" v-for=\"data in openedData\">\n        <span :title=\"data.firstName + ' ' + data.lastName\">{{data.firstName}} {{data.lastName}}</span>\n        <span :title=\"data.phone\">{{data.phone}}</span>\n        <span :title=\"data.email\">{{data.email}}</span>\n        <span :title=\"data.text\">{{data.date | dateConversion}}</span>\n      </div>\n      <div class=\"no-data\" v-if=\"openedData.length < 1\">\n        No data found.\n      </div>\n    </div>\n    <div class=\"data-pagination\" v-if=\"count > 50\">\n      <button @click=\"setPageNum(0)\">First</button>\n      <button @click=\"setPageNum(selectedPage-1)\" :disabled=\"selectedPage == 0\">Previous</button>\n      <button v-for=\"i in pagination\" @click=\"setPageNum(i-1)\" :class=\"{'button-selected': selectedPage == i-1}\">{{i}}</button>\n      <button @click=\"setPageNum(selectedPage+1)\" :disabled=\"selectedPage == Math.ceil(count/50) - 1\">Next</button>\n      <button @click=\"setPageNum(Math.ceil(count/50) - 1)\">Last</button>\n    </div> -->\n  </el-dialog>\n</template>\n\n<script>\nimport ReportService from '../../services/ReportService'\nimport { EventService } from '../../main';\n\nexport default {\n  name: 'openedEmailsModal',\n  props: ['startDate', 'endDate', 'reportType'],\n\n  data: function() {\n    return {\n      modalOpen: true,\n      openedData: [],\n      count: 0,\n      selectedPage: 0,\n    }\n  },\n  filters: {\n    dateConversion(date) {\n      let convertedDate = date + (1000*60*60*6);\n      let dateString = new Date(convertedDate).toString().substr(4,11);            \n      return dateString;\n    }\n  },\n  created() {\n    this.getData();   \n  },\n  computed: {\n    parseDialogTitle (propType) {\n      let type = this.reportType.split('-');\n      for (let i = 0; i < type.length; i++) {\n        const element = type[0].charAt(0).toUpperCase() + type[0].slice(1) + ' ' + type[1].charAt(0).toUpperCase() + type[1].slice(1);\n        return element;\n      }\n    },\n    upperBound() {\n      return Math.ceil(this.count/50)\n    },\n    pagination() {\n      if(this.selectedPage > 4 && this.selectedPage < this.upperBound - 5 && this.upperBound > 10 ) {\n        return [this.selectedPage -4, this.selectedPage -3, this.selectedPage -2, this.selectedPage -1, this.selectedPage, this.selectedPage + 1, this.selectedPage + 2, this.selectedPage + 3, this.selectedPage + 4, this.selectedPage + 5]\n      }\n      if(this.selectedPage >= this.upperBound - 6 && this.upperBound > 10 ) {\n        return [this.upperBound - 9, this.upperBound - 8, this.upperBound - 7, this.upperBound - 6, this.upperBound - 5, this.upperBound - 4, this.upperBound - 3, this.upperBound - 2, this.upperBound - 1, this.upperBound ]\n      }\n      else {\n        return Math.min(10, Math.ceil(this.count/50))\n      }\n    }\n  },\n  methods: {\n    getData(num) {\n      EventService.$emit(\"loading\", \"show\");\n      var locationIdArray = [];\n      let locationId = localStorage.getItem('locationId');\n      if(locationId) {\n        locationIdArray.push(locationId);\n      } else {\n        let locOptions = JSON.parse(localStorage.getItem('locationOptions'));\n        locOptions.map(el => locationIdArray.push(el.locationId));\n      }\n      let selectNum = 0;\n      if(num) {\n        selectNum = num;\n      }\n      let vm = this;\n      if(vm.reportType == 'email-opened') {\n          ReportService.getEmailOpenedEngagement(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationIdArray, selectNum).then(response => {\n            if(response.result) vm.openedData = response.result;\n            if(response.count && response.count[0]) {\n              vm.count = response.count[0].totalCount;\n            }\n            EventService.$emit(\"loading\", \"hide\");\n        })\n      } else if(vm.reportType == 'email-replied') {\n          ReportService.getEmailRepliedEngagement(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationIdArray, selectNum).then(response => {\n            if(response.result) vm.openedData = response.result;\n            if(response.count && response.count[0]) {\n              vm.count = response.count[0].totalCount;\n            }\n            EventService.$emit(\"loading\", \"hide\");\n        })\n      } else if(vm.reportType == 'sms-opened') {\n          ReportService.getSmsOpenedEngagement(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationIdArray, selectNum).then(response => {\n            if(response.result) vm.openedData = response.result;\n            if(response.count && response.count[0]) {\n              vm.count = response.count[0].totalCount;\n            }\n            EventService.$emit(\"loading\", \"hide\");\n        })\n      } else if(vm.reportType == 'sms-replied') {\n          ReportService.getSmsRepliedEngagement(new Date(vm.startDate).getTime(), new Date(vm.endDate).getTime(), locationIdArray, selectNum).then(response => {\n            if(response.result) vm.openedData = response.result;\n            if(response.count && response.count[0]) {\n              vm.count = response.count[0].totalCount;\n            }\n            EventService.$emit(\"loading\", \"hide\");\n        })\n      }\n    },\n    setPageNum(pageNum) {\n      if(pageNum != this.selectedPage) {\n        this.selectedPage = pageNum;\n        this.getData(pageNum);\n      }\n    },\n    closeModal: function () {\n      this.$emit('closeModal');\n      this.openedData = null;\n      this.modalOpen = false;\n      this.selectedPage = 1;\n      EventService.$emit('loading', 'hide')\n    },\n  }\n}\n</script>\n\n<style scoped>\n.modal-container {\n  width: 600px;\n  min-height: 350px;\n  margin: 200px auto 0;\n  padding: 20px 30px;\n  background-color: #fff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, .33);\n  transition: all .3s ease;\n  position: sticky;\n  top: 40px;\n  z-index: 580;\n}\n\n.modal-mask {\n  z-index: 580;\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  padding: 5px 0;\n}\n\n.modal-header h4 {\n  text-transform: capitalize;\n}\n\n.modal-header span {\n  margin: 15px 0 0 0;\n  font-size: 25px;\n  color: #696969;\n}\n\n.modal-body {\n  display: flex;\n  flex-direction: column;\n  max-height: 350px;\n}\n\n.overflow {\n  overflow-y: scroll;\n}\n\n.close {\n  float: right;\n  font-size: 20px;\n  cursor: pointer;\n}\n\n.opened-data {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.opened-data span {\n  width: 33.3%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin: 5px 0;\n  padding: 5px ;\n  border-bottom: 1px solid lightgrey;\n}\n\n.bordered {\n  border-bottom: 1px solid grey;\n  margin-bottom: 5px;\n}\n\n.bordered span {\n  font-weight: 600;\n  border-bottom: none;\n}\n\n.data-pagination {\n  margin-left: 20px;\n  /* border-top: 3px solid #efefef; */\n  padding: 10px;\n  width: 100%;\n  font-size: 12px;\n}\n\n.data-pagination button {\n  border: 1px solid #efefef;\n  padding: 10px;\n  cursor: pointer;\n  background: white;\n  border-radius: 0;\n  min-width: 25px;\n}\n\n.data-pagination button.button-selected {\n  background: #dfdfdf;\n}\n\n.data-pagination button:hover {\n  background: #dfdfdf;\n}\n.dialog-footer {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 30px;\n  /* background: red; */\n  margin-top: 20px;\n  width: 100%;\n}\n.footer-count {\n  font-size: 14px;\n  color: #9a9a9a;\n}\n\n</style>\n"],"sourceRoot":"src/components/Reports"}]}