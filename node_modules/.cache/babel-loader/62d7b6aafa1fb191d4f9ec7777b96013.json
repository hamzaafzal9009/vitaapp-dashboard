{"remainingRequest":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/babel-loader/lib/index.js!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/DashboardComponents/WordCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/src/components/DashboardComponents/WordCloud.vue","mtime":1581270622000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/package.json","mtime":1587799327166},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hamzaafzal/OLD DATA/Mac Home/vueJS/OPINIION FINAL/opiniionv4/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["WordCloud.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <el-card shadow=\"always\" class=\"tall-card\">\n    <el-row>\n      <div class=\"o-card-title-1 clickable\" @click=\"followLink('/feedback')\">Word Analysis</div>\n      <div class=\"word-cloud-body\">\n        <div class=\"dashboard-square\">\n          <span class=\"dashboard-square-header\" style=\"color: #9A9A9A; font-size: 18px;\">POSITIVE</span>\n          <div id=\"positive-word-cloud\"></div>\n          <div class=\"empty-word-cloud\" v-show=\"positiveWordCloud && positiveWordCloud.length < 1\">Not enough feedback to analyze.</div>\n        </div>\n        <div class=\"dashboard-square\">\n          <span class=\"dashboard-square-header\" style=\"color: #9A9A9A; font-size: 18px;\">NEGATIVE</span>\n          <div id=\"negative-word-cloud\"></div>\n          <div class=\"empty-word-cloud\" v-show=\"negativeWordCloud && negativeWordCloud.length < 1\">Not enough feedback to analyze.</div>\n        </div>\n      </div>\n      <div class=\"dashboard-row dashboard-loader\" v-show=\"showLoading\"><i class=\"far fa-hourglass fa-spin\"></i></div>\n    </el-row>\n  </el-card>\n</template>\n\n<script>\nimport DashboardService from './../../services/DashboardService';\nimport {EventService} from '../../main';\n\nexport default {\n  name: 'wordCloud',\n  data: function() {\n    return {\n      positiveWordCloud: null,\n      negativeWordCloud: null,\n      showLoading: true,\n      locationId: null,\n    }\n  },\n  mounted() {\n    this.getWordCloud();\n  },\n  created() {\n    EventService.$on('locationChange', this.getWordCloud);\n  },\n  beforeDestroy: function () {\n    EventService.$off('locationChange', this.getWordCloud);\n  },\n  methods: {\n    followLink(targetPage) {\n      this.$router.push(targetPage);\n    },\n    getWordCloud() {\n      this.showLoading = true;\n      this.locationId = localStorage.getItem(\"locationId\");\n      this.positiveWordCloud = null;\n      this.negativeWordCloud = null;\n      var vm = this;\n      DashboardService.getWordCloud(vm.locationId)\n        .then(function(response) {\n          // We have our data so stop showing the spinner.\n          vm.showLoading = false;\n\n          // Now assign the returned data to our variables. This is used for the logic in the HTML whether or not to display the 'Not enough data' message.\n          vm.positiveWordCloud = response.positiveWordCloud;\n          vm.negativeWordCloud = response.negativeWordCloud;\n\n          // Check that the responses actually have data before sending to be processed. If there is no data then remove the SVG to prevent stacking charts on locationChange.\n          response.positiveWordCloud.length > 0 ? vm.createWordCloud(response.positiveWordCloud, 'positive-word-cloud') : d3.select('#positive-word-cloud').selectAll('svg').remove();\n          response.negativeWordCloud.length > 0 ? vm.createWordCloud(response.negativeWordCloud, 'negative-word-cloud') : d3.select('#negative-word-cloud').selectAll('svg').remove();\n\n        }, function(error) {\n          console.log(error);\n      });\n    },\n    createWordCloud(data, cloud) {\n      // First clear out any existing SVG elements. In the event of a locationChange.\n      d3.select('#' + cloud).selectAll('svg').remove();\n\n      const width = document.getElementById(cloud).offsetWidth;\n      const height = 350;\n      const scaleUpFactor = 1;\n      const scaleDownFactor = 0.6;\n\n      const max = d3.max(data, d => d.size);\n      const min = d3.min(data, d => d.size);\n\n      const widths = [ 40, 45, 50, 70, 90 ];\n\n      const fontSizes = [ 8, 10, 12, 14, 16 ];\n\n      const factors = [ 1.4 ];\n\n      const widthScale = d3.scaleQuantize().domain([min, max]).range(widths);\n      const fontScale = d3.scaleQuantize().domain([min, max]).range(fontSizes);\n      const factorScale = d3.scaleQuantize().domain([min, max]).range(factors);\n\n\n      function handleMouseOver(d, i) {\n        const theese = d3.select(this);\n        const easeTransition = d3.transition().duration(150).ease(d3.easeLinear);\n        theese.raise();\n        theese.select('.wordCloudCircle')\n                .transition(easeTransition)\n                .attr(\"fill\", \"white\")\n                .attr(\"stroke\", d => d.data.color)\n                .attr(\"r\", d => d.r * factorScale(d.data.size));\n        theese.select('text.wordcloud-text-main')\n                .transition(easeTransition)\n                .attr('font-size', d => {\n                  let fontSize = fontScale(d.data.size) * factorScale(d.data.size);\n                  const radius = d.r * factorScale(d.data.size);\n                  let numOfLetters = Math.floor((radius * 2) / (fontSize / 2));\n                  while(numOfLetters < d.data.name.length) {\n                    fontSize -= 2;\n                    numOfLetters = Math.floor((radius * 2) / (fontSize / 2));\n                  }\n                  return fontSize;\n                })\n                .attr('font-weight', 'bold')\n                .attr(\"fill\", d.data.color)\n                .text(d => d.data.name.charAt(0).toUpperCase() + d.data.name.slice(1));\n        theese.select('text.wordcloud-text-mention')\n                .transition(easeTransition)\n                .attr('fill', '#858585')\n                .attr(\"transform\", d => `translate(0,${fontScale(d.data.size) * factorScale(d.data.size) * 0.6 + 10})`)\n                .attr('font-size', d => fontScale(d.data.size) * factorScale(d.data.size) * 0.6)\n                .style(\"visibility\", 'visible');\n      }\n\n      function handleMouseOut(d, i) {\n        const theese = d3.select(this);\n        theese.select('.wordCloudCircle')\n                .transition()\n                .attr(\"fill\", d => d.data.color)\n                .attr(\"stroke\", \"none\")\n                .attr(\"r\", d => d.r);\n        theese.select('text.wordcloud-text-main')\n                .transition()\n                .attr('font-size', d => fontScale(d.data.size))\n                .attr(\"fill\", 'white')\n                .text((d) => {\n                  let word = d.data.name.charAt(0).toUpperCase() + d.data.name.slice(1);\n                  const font = fontScale(d.data.size);\n                  const numOfLetters = Math.floor((d.r * 2) / (font / 2));\n                  if (numOfLetters < word.length) {\n                    word = word.slice(0, numOfLetters - 3) + '...';\n                  }\n                  return word\n                })\n        theese.select('text.wordcloud-text-mention')\n                .transition()\n                .attr('font-size', d => fontScale(d.data.size) * scaleDownFactor )\n                .style(\"visibility\", 'hidden');\n      }\n\n      function handleMouseClick(d, i) {\n        window.location.href = '/feedback/' + d.data.name + '/' + (d.data.vibe[0].toUpperCase() + d.data.vibe.substr(1));\n      }\n\n      const svg = d3.select('#' + cloud).append(\"svg\")\n          .attr(\"width\", width)\n          .attr(\"height\", height);\n\n      const pack = d3.pack()\n                     .size([width, height])\n                     .padding(10);\n\n      function build(data) {\n        svg.selectAll('*').remove();\n        \n        const circleNodes = svg.selectAll('g')\n          .data(data)\n          .enter()\n          .append('g')\n          .attr('transform', d => `translate(${(d.x)},${(d.y)})`)\n          .on('mouseover', handleMouseOver)\n          .on('mouseout', handleMouseOut)\n          .on('click', handleMouseClick);\n\n        circleNodes.exit().remove();\n\n        const circles = circleNodes\n          .append('circle')\n          .attr('class', 'wordCloudCircle')\n          .attr('r', 1)\n          .transition()\n          .attr('r', d => d.r)\n          .attr(\"fill\", d => d.data.color)\n          .attr('stroke-width', 2);\n\n        const circleMainText = circleNodes\n          .append('text')\n          .attr('fill', 'white')\n          .attr('class', 'wordcloud-text-main')\n          .attr('font-size', d => fontScale(d.data.size))\n          .attr('dy', 4)\n          .text((d) => {\n            let word = d.data.name.charAt(0).toUpperCase() + d.data.name.slice(1);\n            const font = fontScale(d.data.size);\n            const numOfLetters = Math.floor((d.r * 2) / (font / 2));\n            if (numOfLetters < word.length) {\n              word = word.slice(0, numOfLetters - 3) + '...';\n            }\n            return word\n          });\n\n        const circleMentionText = circleNodes\n          .append('text')\n          .style('visibility', 'hidden')\n          .attr('class', 'wordcloud-text-mention')\n          .attr('font-size', d => (fontScale(d.data.size) * scaleDownFactor) )\n          .attr(\"transform\", d => `translate(0,${ fontScale(d.data.size) + 5 })`)\n          .text(d => `${d.data.size} Mentions`);\n        }\n\n      function buildData(datas) {\n        const root = d3.hierarchy({children: datas});\n        root.sum( d => d.size ).sort((a,b) => { return a.size - b.size; });\n        pack(root);\n\n        const nodes = root.descendants();\n        nodes.shift();\n        return nodes;\n      }\n\n      const hierarchyData = buildData(data);\n      build(hierarchyData);\n    }\n  }\n}\n</script>\n\n<style>\n\ng {\n  cursor: pointer;\n}\n\ntext.wordcloud-text-main,\ntext.wordcloud-text-mention {\n  text-anchor: middle;\n}\n\n.dashboard-tile {\n  font-size: 18px;\n  overflow: hidden;\n}\n\n#positive-word-cloud,\n#negative-word-cloud {\n  padding: 0;\n}\n\n#positive-word-cloud svg,\n#negative-word-cloud svg {\n  margin: 0 auto;\n}\n\n.word-cloud-body {\n  display: flex;\n  justify-content: space-between;\n}\n\n.dashboard-square {\n  max-width: 50%;\n  width: 450px;\n  text-align: center;\n  margin-top: 16px;\n}\n\n.dashboard-square-header {\n  font-weight: bolder;\n}\n\n.dashboard-tile-body {\n  display: flex;\n  flex-direction: column;\n}\n\n.dashboard-tile-body span {\n  line-height: 14px;\n  padding: 0;\n  margin: 0;\n}\n\n.empty-word-cloud {\n  color: #858585;\n  padding-top: 16px;\n}\n\n</style>\n"],"sourceRoot":"src/components/DashboardComponents"}]}